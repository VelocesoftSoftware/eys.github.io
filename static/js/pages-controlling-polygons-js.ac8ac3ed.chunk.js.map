{"version":3,"sources":["../node_modules/react-leaflet/esm/FeatureGroup.js","../node_modules/react-leaflet/esm/Polygon.js","pages/controlling-polygons.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/hooks.js","../node_modules/react-leaflet/esm/LayersControl.js"],"names":["FeatureGroup","createPathComponent","_ref","ctx","children","_c","options","instance","LeafletFeatureGroup","context","layerContainer","overlayContainer","Polygon","positions","LeafletPolygon","layer","props","prevProps","setLatLngs","center","River","Place","ControllingGroup","map","useMapEvent","layeradd","bounds","L","LatLngBounds","eachLayer","extend","getBounds","isValid","flyToBounds","riverColor","color","placeColor","MapWrapper","_jsxs","MapContainer","zoom","scrollWheelZoom","_jsx","TileLayer","tileLayer","LayersControl","position","collapsed","Overlay","name","pathOptions","withPane","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","on","current","off","useLayerLifecycle","_context$layerContain2","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","useState","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","_props$pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer","useMap","type","handler","useLayersControlElement","Control","Layers","undefined","layersControl","control","collapse","expand","useLayersControl","createControlledLayer","addLayerToControl","parentContext","setLayer","useCallback","layerToAdd","checked","layerToRemove","useMemo","BaseLayer","addBaseLayer","addOverlay"],"mappings":"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","file":"static/js/pages-controlling-polygons-js.ac8ac3ed.chunk.js","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { FeatureGroup as LeafletFeatureGroup } from 'leaflet';\nexport const FeatureGroup = createPathComponent(function createFeatureGroup(_ref, ctx) {\n  let {\n    children: _c,\n    ...options\n  } = _ref;\n  const instance = new LeafletFeatureGroup([], options);\n  const context = { ...ctx,\n    layerContainer: instance,\n    overlayContainer: instance\n  };\n  return {\n    instance,\n    context\n  };\n});","import { createPathComponent } from '@react-leaflet/core';\nimport { Polygon as LeafletPolygon } from 'leaflet';\nexport const Polygon = createPathComponent(function createPolygon(_ref, ctx) {\n  let {\n    positions,\n    ...options\n  } = _ref;\n  const instance = new LeafletPolygon(positions, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updatePolygon(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","import {\n  MapContainer,\n  Polygon,\n  FeatureGroup,\n  TileLayer,\n  LayersControl,\n  useMapEvent,\n} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst center = [52.22977, 21.01178];\n\nconst River = [\n  [52.261433597272294, 21.01272583007813],\n  [52.259857564663236, 21.008262634277347],\n  [52.2485084763669, 21.019763946533207],\n  [52.24377883252849, 21.026287078857425],\n  [52.240835688576325, 21.032123565673828],\n  [52.235474460511696, 21.037960052490238],\n  [52.22800971166361, 21.04465484619141],\n  [52.2249603686772, 21.047916412353516],\n  [52.23600009974023, 21.042766571044925],\n  [52.24966453484508, 21.023368835449222],\n  [52.26132853017426, 21.01272583007813],\n];\n\nconst Place = [\n  [52.23295130556395, 20.998821258544925],\n  [52.230007443518716, 20.98474502563477],\n  [52.224750061441355, 20.98920822143555],\n  [52.22769427210073, 21.002597808837894],\n];\n\nconst ControllingGroup = () => {\n  const map = useMapEvent({\n    layeradd() {\n      let bounds = new L.LatLngBounds();\n      map.eachLayer(function (layer) {\n        if (layer instanceof L.FeatureGroup) {\n          bounds.extend(layer.getBounds());\n        }\n      });\n\n      if (bounds.isValid()) {\n        map.flyToBounds([bounds]);\n      }\n    },\n  });\n\n  return null;\n};\n\nconst riverColor = { color: \"red\" };\nconst placeColor = { color: \"blue\" };\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\n      <TileLayer {...tileLayer} />\n\n      <LayersControl position=\"topright\" collapsed={false}>\n        <LayersControl.Overlay name=\"River\">\n          <FeatureGroup>\n            <Polygon pathOptions={riverColor} positions={River} />\n          </FeatureGroup>\n        </LayersControl.Overlay>\n\n        <LayersControl.Overlay name=\"Place\">\n          <FeatureGroup>\n            <Polygon pathOptions={placeColor} positions={Place} />\n          </FeatureGroup>\n        </LayersControl.Overlay>\n      </LayersControl>\n\n      <ControllingGroup />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl(_ref, ctx) {\n  let {\n    children: _c,\n    ...options\n  } = _ref;\n  const instance = new Control.Layers(undefined, undefined, options);\n  return {\n    instance,\n    context: { ...ctx,\n      layersControl: instance\n    }\n  };\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement);\n// @ts-ignore\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    const parentContext = useLeafletContext();\n    const propsRef = useRef(props);\n    const [layer, setLayer] = useState(null);\n    const {\n      layersControl,\n      map\n    } = parentContext;\n    const addLayer = useCallback(layerToAdd => {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    const removeLayer = useCallback(layerToRemove => {\n      layersControl == null ? void 0 : layersControl.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    const context = useMemo(() => ({ ...parentContext,\n      layerContainer: {\n        addLayer,\n        removeLayer\n      }\n    }), [parentContext, addLayer, removeLayer]);\n    useEffect(() => {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});"],"sourceRoot":""}