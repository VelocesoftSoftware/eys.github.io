{"version":3,"sources":["pages/center-map-when-click-marker.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js"],"names":["center","points","lat","lng","title","MyMarkers","_ref","map","data","_ref2","index","_jsx","Marker","position","eventHandlers","click","e","location","target","getLatLng","flyToBounds","children","Popup","MapWrapper","setMap","useState","_jsxs","MapContainer","whenCreated","zoom","scrollWheelZoom","TileLayer","tileLayer","withPane","props","context","_props$pane","pane","useEventHandlers","element","eventHandlersRef","useRef","useEffect","instance","on","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","options","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer","LeafletPopup","overlayContainer","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup","ctx","LeafletMarker","marker","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable"],"mappings":"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","file":"static/js/pages-center-map-when-click-marker-js.f1ab2cae.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\nconst zoom = 18;\n\nconst points = [\n  {\n    lat: 52.230020586193795,\n    lng: 21.01083755493164,\n    title: 'point 1'\n  },\n  {\n    lat: 52.22924516170657,\n    lng: 21.011320352554325,\n    title: 'point 2'\n  },\n  {\n    lat: 52.229511304688444,\n    lng: 21.01270973682404,\n    title: 'point 3'\n  },\n  {\n    lat: 52.23040500771883,\n    lng: 21.012146472930908,\n    title: 'point 4'\n  },\n];\n\nconst MyMarkers = ({ map, data }) => {\n\n  return data.map(({ lat, lng, title }, index) => (\n    <Marker\n      key={index}\n      position={{ lat, lng }}\n      eventHandlers={{\n        click(e) {\n          const location = e.target.getLatLng();\n          map.flyToBounds([location]);\n        }\n      }}\n    >\n      <Popup>{title}</Popup>\n    </Marker>\n  ));\n}\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null)\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={zoom}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <MyMarkers map={map} data={points} />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  let {\n    position,\n    ...options\n  } = _ref;\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"],"sourceRoot":""}