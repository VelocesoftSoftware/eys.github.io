{"version":3,"sources":["pages/many-markers.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js"],"names":["center","points","lat","lng","title","MyMarkers","_ref","data","map","_ref2","index","_jsx","Marker","position","children","Popup","MapWrapper","_jsxs","MapContainer","zoom","scrollWheelZoom","TileLayer","tileLayer","withPane","props","context","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","instance","on","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","useState","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","options","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer","LeafletPopup","overlayContainer","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup","ctx","LeafletMarker","marker","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable"],"mappings":"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","file":"static/js/pages-many-markers-js.bcfa270a.chunk.js","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst points = [\n  {\n    lat: 52.230020586193795,\n    lng: 21.01083755493164,\n    title: 'point 1'\n  },\n  {\n    lat: 52.22924516170657,\n    lng: 21.011320352554325,\n    title: 'point 2'\n  },\n  {\n    lat: 52.229511304688444,\n    lng: 21.01270973682404,\n    title: 'point 3'\n  },\n  {\n    lat: 52.23040500771883,\n    lng: 21.012146472930908,\n    title: 'point 4'\n  },\n];\n\nconst MyMarkers = ({ data }) => {\n  return data.map(({ lat, lng, title }, index) => (\n    <Marker\n      key={index}\n      position={{ lat, lng }}\n    >\n      <Popup>{title}</Popup>\n    </Marker>\n  ));\n}\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\n\n      <TileLayer {...tileLayer} />\n\n      <MyMarkers data={points} />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  let {\n    position,\n    ...options\n  } = _ref;\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"],"sourceRoot":""}