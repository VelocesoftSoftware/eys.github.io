{"version":3,"sources":["pages/add-move-and-delete-marker.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js"],"names":["center","ShowMarkers","_ref","mapContainer","legend","markers","map","marker","index","_jsx","Marker","uniceid","position","draggable","eventHandlers","moveend","e","lat","lng","target","getLatLng","textContent","concat","children","Popup","onClick","removeMarker","eachLayer","layer","options","pane","removeLayer","MyMarkers","_ref2","setMarker","useState","setLegend","useEffect","L","control","info","DomUtil","create","onAdd","addTo","on","latlng","mar","length","undefined","MapWrapper","setMap","_jsxs","MapContainer","whenCreated","zoom","scrollWheelZoom","TileLayer","tileLayer","withPane","props","context","_props$pane","useEventHandlers","element","eventHandlersRef","useRef","instance","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","prevProps","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer","LeafletPopup","overlayContainer","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup","ctx","LeafletMarker","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","enable","disable"],"mappings":"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","file":"static/js/pages-add-move-and-delete-marker-js.018dfb0f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Marker, MapContainer, TileLayer, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst removeMarker = (index, map, legend) => {\n  map.eachLayer((layer) => {\n    if (layer.options && layer.options.pane === \"markerPane\") {\n      if (layer.options.uniceid === index) {\n        map.removeLayer(layer);\n        legend.textContent = 'goodbye marker 💩';\n      }\n    }\n  });\n}\n\nconst ShowMarkers = ({ mapContainer, legend, markers }) => {\n  return markers.map((marker, index) => {\n    return <Marker\n      key={index}\n      uniceid={index}\n      position={marker}\n      draggable={true}\n      eventHandlers={{\n        moveend(e) {\n          const { lat, lng } = e.target.getLatLng();\n          legend.textContent = `change position: ${lat} ${lng}`;\n        }\n      }}\n    >\n      <Popup>\n        <button onClick={() => removeMarker(index, mapContainer, legend)}>delete marker 💔</button>\n      </Popup>\n    </Marker>\n  })\n}\n\nconst MyMarkers = ({ map }) => {\n  const [marker, setMarker] = useState([])\n  const [legend, setLegend] = useState()\n\n  useEffect(() => {\n    if (!map) return;\n    const legend = L.control({ position: \"bottomleft\" });\n\n    const info = L.DomUtil.create(\"div\", \"legend\");\n\n    legend.onAdd = () => {\n      info.textContent = `click on the map, move the marker, click on the marker`;\n      return info;\n    };\n\n    legend.addTo(map);\n\n    map.on('click', (e) => {\n      const { lat, lng } = e.latlng;\n      setMarker(mar => [...mar, [lat, lng]]);\n\n      info.textContent = `new marker: ${e.latlng}`;\n      setLegend(info);\n    })\n\n  }, [map]);\n\n  return marker.length > 0 && legend !== undefined ? (\n    <ShowMarkers\n      mapContainer={map}\n      legend={legend}\n      markers={marker} />\n  )\n    : null\n}\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <MyMarkers map={map} />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;\n\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  let {\n    position,\n    ...options\n  } = _ref;\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"],"sourceRoot":""}