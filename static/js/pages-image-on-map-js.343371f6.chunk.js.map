{"version":3,"sources":["../node_modules/react-leaflet/esm/ImageOverlay.js","pages/image-on-map.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js","../node_modules/react-leaflet/esm/hooks.js","../node_modules/@react-leaflet/core/esm/media-overlay.js","data/pin.png"],"names":["ImageOverlay","createLayerComponent","_ref","ctx","bounds","url","options","instance","LeafletImageOverlay","context","overlayContainer","overlay","props","prevProps","updateMediaOverlay","setUrl","center","pointerIcon","L","Icon","iconUrl","newMarker","iconSize","iconAnchor","popupAnchor","customPopup","_jsxs","className","children","_jsx","src","alt","width","href","target","rel","imageBounds","OverlayImage","useMap","fitBounds","opacity","MapWrapper","map","setMap","useState","MapContainer","whenCreated","zoom","scrollWheelZoom","TileLayer","tileLayer","Marker","icon","position","eventHandlers","click","e","setView","getLatLng","Popup","keepInView","minWidth","withPane","_props$pane","pane","useEventHandlers","element","eventHandlersRef","useRef","useEffect","on","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","createControlComponent","createInstance","useControl","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","zIndex","setOpacity","setZIndex","LeafletTileLayer","LeafletPopup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup","LeafletMarker","marker","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable","useMapEvent","type","handler","LatLngBounds","setBounds"],"mappings":"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","file":"static/js/pages-image-on-map-js.343371f6.chunk.js","sourcesContent":["import { createLayerComponent, updateMediaOverlay } from '@react-leaflet/core';\nimport { ImageOverlay as LeafletImageOverlay } from 'leaflet';\nexport const ImageOverlay = createLayerComponent(function createImageOveraly(_ref, ctx) {\n  let {\n    bounds,\n    url,\n    ...options\n  } = _ref;\n  const instance = new LeafletImageOverlay(url, bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateImageOverlay(overlay, props, prevProps) {\n  updateMediaOverlay(overlay, props, prevProps);\n\n  if (props.url !== prevProps.url) {\n    overlay.setUrl(props.url);\n  }\n});","import {\n  MapContainer,\n  TileLayer,\n  ImageOverlay,\n  Marker,\n  useMap,\n  Popup,\n} from \"react-leaflet\";\nimport { useState } from \"react\";\nimport L from \"leaflet\";\nimport newMarker from \"../data/pin.png\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst center = [50.0595, 19.9379];\n\nconst pointerIcon = new L.Icon({\n  iconUrl: newMarker,\n  iconSize: [50, 58], // size of the icon\n  iconAnchor: [20, 58], // changed marker icon position\n  popupAnchor: [0, -60], // changed popup position\n});\n\nconst customPopup = (\n  <div className=\"customPopup\">\n    <figure>\n      <img\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/A-10_Sukiennice_w_Krakowie_Krak%C3%B3w%2C_Rynek_G%C5%82%C3%B3wny_MM.jpg/1920px-A-10_Sukiennice_w_Krakowie_Krak%C3%B3w%2C_Rynek_G%C5%82%C3%B3wny_MM.jpg\"\n        alt=\"Kraków\"\n        width=\"100%\"\n      />\n      <figcaption>Source: wikipedia.org</figcaption>\n    </figure>\n    <div>\n      Kraków,[a] also written in English as Krakow and traditionally known as\n      Cracow, is the second-largest and one of the oldest cities in Poland.\n      Situated on the Vistula River in Lesser Poland Voivodeship...{\" \"}\n      <a\n        href=\"https://en.wikipedia.org/wiki/Krak%C3%B3w\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        → show more\n      </a>\n    </div>\n  </div>\n);\n\n// image\nconst imageUrl =\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/Krakow_Center_-_basic_map.svg/1440px-Krakow_Center_-_basic_map.svg.png\";\n\n// add image to map ;)\nconst imageBounds = [\n  [50.0665, 19.93],\n  [50.0522, 19.9455],\n];\n\nconst OverlayImage = () => {\n  const map = useMap();\n\n  map.fitBounds(imageBounds);\n\n  return (\n    <ImageOverlay\n      url={imageUrl}\n      fitBounds={true}\n      bounds={imageBounds}\n      opacity={1}\n    />\n  );\n};\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={15}\n      scrollWheelZoom={true}\n    >\n      <TileLayer {...tileLayer} />\n\n      <Marker\n        icon={pointerIcon}\n        position={center}\n        eventHandlers={{\n          click: (e) => {\n            map.setView(e.target.getLatLng(), 15);\n          },\n        }}\n      >\n        <Popup keepInView={true} minWidth={220}>\n          {customPopup}\n        </Popup>\n      </Marker>\n\n      <OverlayImage />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  let {\n    position,\n    ...options\n  } = _ref;\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { LatLngBounds } from 'leaflet';\nexport function updateMediaOverlay(overlay, props, prevProps) {\n  if (props.bounds instanceof LatLngBounds && props.bounds !== prevProps.bounds) {\n    overlay.setBounds(props.bounds);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    overlay.setOpacity(props.opacity);\n  }\n\n  if (props.zIndex != null && props.zIndex !== prevProps.zIndex) {\n    // @ts-ignore missing in definition but inherited from ImageOverlay\n    overlay.setZIndex(props.zIndex);\n  }\n}","export default __webpack_public_path__ + \"static/media/pin.5c3f4112.png\";"],"sourceRoot":""}