{"version":3,"sources":["pages/checking-if-the-marker-is-in-viewport.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js"],"names":["center","Legend","_ref","map","view","setView","useState","markerRef","useRef","useEffect","legend","L","control","position","onAdd","div","DomUtil","create","DomEvent","disableClickPropagation","innerHTML","concat","addTo","checkIfMarkerIsInViewport","contains","getBounds","current","getLatLng","on","remove","off","_jsx","Marker","ref","children","Popup","MapWrapper","setMap","_jsxs","MapContainer","whenCreated","zoom","scrollWheelZoom","TileLayer","tileLayer","withPane","props","context","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","instance","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","options","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer","LeafletPopup","overlayContainer","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup","ctx","LeafletMarker","marker","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable"],"mappings":"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","file":"static/js/pages-checking-if-the-marker-is-in-viewport-js.d12cb840.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Marker, MapContainer, TileLayer, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst center = [52.22977, 21.01178];\n\nconst Legend = ({ map }) => {\n  const [view, setView] = useState(true);\n  const markerRef = useRef(null);\n\n  useEffect(() => {\n    if (!map) return;\n\n    const legend = L.control({ position: \"bottomleft\" });\n\n    legend.onAdd = () => {\n      legend.div = L.DomUtil.create(\"div\", \"description\");\n\n      L.DomEvent.disableClickPropagation(legend.div);\n\n      legend.div.innerHTML = `We check if the marker is in the page view. Move the marker so that it is outside the map. Marker in view: <b style=\"color: ${\n        view ? \"black\" : \"red\"\n      }\">${view}</b>`;\n\n      return legend.div;\n    };\n\n    legend.addTo(map);\n\n    const checkIfMarkerIsInViewport = () => {\n      const mapBounds = map.getBounds();\n      const contains = mapBounds.contains(markerRef.current.getLatLng());\n      setView(contains);\n    };\n\n    map.on(\"moveend\", checkIfMarkerIsInViewport);\n\n    // remove the legend\n    return () => {\n      legend.remove();\n      map.off(\"moveend\", checkIfMarkerIsInViewport);\n    };\n  }, [map, view]);\n\n  return (\n    <Marker ref={markerRef} position={center}>\n      <Popup>Center Warsaw</Popup>\n    </Marker>\n  );\n};\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n      <TileLayer {...tileLayer} />\n\n      <Legend map={map} />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  let {\n    position,\n    ...options\n  } = _ref;\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"],"sourceRoot":""}