{"version":3,"sources":["pages/geoJson-extended-action.js"],"names":["center","onEachFeature","feature","layer","on","e","properties","nazwa","bindPopup","getVoivodeshipName","this","openPopup","setStyle","fillColor","weight","color","fillOpacity","closePopup","MapWrapper","map","setMap","useState","useEffect","legend","L","control","position","onAdd","div","DomUtil","create","innerHTML","addTo","_jsxs","MapContainer","whenCreated","zoom","scrollWheelZoom","children","_jsx","TileLayer","tileLayer","GeoJSON","data","geojson"],"mappings":"wIAAA,qFAMA,MAAMA,EAAS,CAAC,GAAI,MAQpB,SAASC,EAAcC,EAASC,GAC9BA,EAAMC,GAAG,aAAa,SAAUC,IAPlC,SAA4BH,EAASC,GAC/BD,EAAQI,YAAcJ,EAAQI,WAAWC,OAC3CJ,EAAMK,UAAUN,EAAQI,WAAWC,MAEvC,CAKIE,CAAmBP,EAASC,GAE5BO,KAAKC,YAGLD,KAAKE,SAAS,CACZC,UAAW,UACXC,OAAQ,EACRC,MAAO,UACPC,YAAa,IAEjB,IACAb,EAAMC,GAAG,YAAY,WACnBM,KAAKO,aAELP,KAAKE,SAAS,CACZC,UAAW,UACXC,OAAQ,EACRC,MAAO,UACPC,YAAa,IAEjB,GACF,CAoCeE,UAlCIA,KACjB,MAAOC,EAAKC,GAAUC,mBAAS,MAiB/B,OAfAC,qBAAU,KACR,IAAKH,EAAK,OAEV,MAAMI,EAASC,IAAEC,QAAQ,CAAEC,SAAU,eAErCH,EAAOI,MAAQ,KACb,MAAMC,EAAMJ,IAAEK,QAAQC,OAAO,MAAO,UAEpC,OADAF,EAAIG,UAAS,yBACNH,CAAG,EAGZL,EAAOS,MAAMb,EAAI,GAEhB,CAACA,IAGFc,eAACC,IAAY,CACXC,YAAaf,EACbpB,OAAQA,EACRoC,KAAM,EACNC,iBAAiB,EAAMC,SAAA,CAGvBC,cAACC,IAAS,IAAKC,MAEfF,cAACG,IAAO,CAACC,KAAMC,EAAS3C,cAAeA,MAE1B,C","file":"static/js/pages-geoJson-extended-action-js.107eb530.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport L from 'leaflet';\nimport geojson from '../data/wojewodztwa-medium.geojson.json'\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52, 19.2];\n\nfunction getVoivodeshipName(feature, layer) {\n  if (feature.properties && feature.properties.nazwa) {\n    layer.bindPopup(feature.properties.nazwa);\n  }\n}\n\nfunction onEachFeature(feature, layer) {\n  layer.on('mouseover', function (e) {\n\n    getVoivodeshipName(feature, layer);\n\n    this.openPopup();\n\n    // style\n    this.setStyle({\n      fillColor: '#eb4034',\n      weight: 2,\n      color: '#eb4034',\n      fillOpacity: 0.7,\n    });\n  });\n  layer.on('mouseout', function () {\n    this.closePopup();\n    // style\n    this.setStyle({\n      fillColor: '#3388ff',\n      weight: 2,\n      color: '#3388ff',\n      fillOpacity: 0.2,\n    });\n  });\n}\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (!map) return;\n\n    const legend = L.control({ position: \"bottomleft\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      div.innerHTML = `click/hover on polygon`;\n      return div;\n    };\n\n    legend.addTo(map);\n\n  }, [map]);\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={6}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <GeoJSON data={geojson} onEachFeature={onEachFeature} />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;"],"sourceRoot":""}