{"version":3,"sources":["../node_modules/react-leaflet/esm/Polyline.js","pages/polyline.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js"],"names":["Polyline","createPathComponent","_ref","ctx","positions","options","instance","LeafletPolyline","context","overlayContainer","layer","props","prevProps","setLatLngs","center","points","MapWrapper","_jsxs","MapContainer","zoom","scrollWheelZoom","children","_jsx","TileLayer","tileLayer","color","opacity","weight","Popup","withPane","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","on","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","map","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","useState","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","position","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","zIndex","setOpacity","setZIndex","LeafletTileLayer","LeafletPopup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup"],"mappings":"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","file":"static/js/pages-polyline-js.d73438fa.chunk.js","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline(_ref, ctx) {\n  let {\n    positions,\n    ...options\n  } = _ref;\n  const instance = new LeafletPolyline(positions, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updatePolyline(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","import { MapContainer, TileLayer, Popup, Polyline } from 'react-leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.2302, 21.01258];\n\nconst points = [\n  [52.2308124251888, 21.011003851890568],\n  [52.2302604393307, 21.01121842861176],\n  [52.2297445891999, 21.011282801628116],\n  [52.22953759032849, 21.011492013931278],\n  [52.22954416173605, 21.01194798946381],\n  [52.22967558968336, 21.012285947799686],\n  [52.2300008721797, 21.012935042381287],\n  [52.230306438414374, 21.014378070831302],\n];\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\n\n      <TileLayer {...tileLayer} />\n\n      <Polyline\n        color={'red'}\n        opacity={0.7}\n        weight={20}\n        positions={points}\n      >\n\n        <Popup>Polygon</Popup>\n      </Polyline>\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});"],"sourceRoot":""}