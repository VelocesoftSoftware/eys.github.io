{"code":"(this[\"webpackJsonpreact-leaflet-examples\"]=this[\"webpackJsonpreact-leaflet-examples\"]||[]).push([[38],{117:function(t,e,n){\"use strict\";n.d(e,\"a\",(function(){return l}));var s=n(89),c=n(79);const l=Object(s.d)((function(t,e){let{data:n,...s}=t;const l=new c.GeoJSON(n,s);return{instance:l,context:{...e,overlayContainer:l}}}),(function(t,e,n){e.style!==n.style&&(null==e.style?t.resetStyle():t.setStyle(e.style))}))},62:function(t,e,n){\"use strict\";n.r(e);var s=n(0),c=n(95),l=n(117),a=n(127),r=n(92),o=n(101),i=n(88),u=n(1);const p=[52.22977,21.01178],j=[{lat:52.22990558765487,lng:21.01168513298035},{lat:52.22962958994604,lng:21.011593937873844},{lat:52.2297445891999,lng:21.012012362480167}],b={steps:64,units:\"meters\",options:{}},y={color:\"yellow\",weight:2,opacity:1,fillColor:\"yellow\",fillOpacity:.7},O=()=>{const t=Object(c.a)(),[e,n]=Object(s.useState)([]);return Object(s.useEffect)((()=>{j.map((t=>{let{lat:e,lng:s}=t;const c=Object(o.circle)([s,e],30,b);return n((t=>[...t,c]))}))}),[t]),e.length>0?Object(u.jsxs)(u.Fragment,{children:[Object(u.jsx)(l.a,{data:e,color:\"red\",weight:2}),Object(u.jsx)(l.a,{data:Object(o.intersect)(...e),style:y})]}):null};e.default=()=>Object(u.jsxs)(a.a,{center:p,zoom:18,children:[Object(u.jsx)(r.a,{...i.a}),Object(u.jsx)(O,{})]})},88:function(t,e,n){\"use strict\";e.a={attribution:'&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}}}]);","name":"static/js/pages-part-of-the-common-js.47b7bf20.chunk.js","map":{"version":3,"names":["this","push","module","__webpack_exports__","__webpack_require__","d","GeoJSON","_react_leaflet_core__WEBPACK_IMPORTED_MODULE_0__","leaflet__WEBPACK_IMPORTED_MODULE_1__","Object","_ref","ctx","data","options","instance","context","overlayContainer","layer","props","prevProps","style","resetStyle","setStyle","r","react__WEBPACK_IMPORTED_MODULE_0__","react_leaflet__WEBPACK_IMPORTED_MODULE_1__","react_leaflet__WEBPACK_IMPORTED_MODULE_2__","react_leaflet__WEBPACK_IMPORTED_MODULE_3__","react_leaflet__WEBPACK_IMPORTED_MODULE_4__","_turf_turf__WEBPACK_IMPORTED_MODULE_5__","_util_tileLayer__WEBPACK_IMPORTED_MODULE_6__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__","center","centers","lat","lng","steps","units","intersectionColor","color","weight","opacity","fillColor","fillOpacity","Intersection","map","polygons","setPolygons","polygon","pol","length","children","zoom","attribution","url"],"sources":["static/js/pages-part-of-the-common-js.47b7bf20.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErG,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,aAC+BA,EAAoBC,EAAEF,EAAqB,KAAK,WAAa,OAAOG,CAAS,IACvF,IAAIC,EAAmDH,EAAoB,IACvEI,EAAuCJ,EAAoB,IAIpF,MAAME,EAAUG,OAAOF,EAA8E,EAArFE,EAAwF,SAAuBC,EAAMC,GACnI,IAAIC,KACFA,KACGC,GACDH,EACJ,MAAMI,EAAW,IAAIN,EAA8C,QAAEI,EAAMC,GAC3E,MAAO,CACLC,WACAC,QAAS,IACJJ,EACHK,iBAAkBF,GAGxB,IAAG,SAAuBG,EAAOC,EAAOC,GAClCD,EAAME,QAAUD,EAAUC,QACT,MAAfF,EAAME,MACRH,EAAMI,aAENJ,EAAMK,SAASJ,EAAME,OAG3B,GAEO,EAED,GACA,SAAUlB,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBmB,EAAEpB,GACD,IAAIqB,EAAqCpB,EAAoB,GAEzDqB,EAA6CrB,EAAoB,IACjEsB,EAA6CtB,EAAoB,KACjEuB,EAA6CvB,EAAoB,KACjEwB,EAA6CxB,EAAoB,IACjEyB,EAA0CzB,EAAoB,KAE9D0B,EAA+C1B,EAAoB,IACnE2B,EAAiD3B,EAAoB,GAE9F,MAAM4B,EAAO,CAAC,SAAS,UAAgBC,EAAQ,CAAC,CAACC,IAAI,kBAAkBC,IAAI,mBAAmB,CAACD,IAAI,kBAAkBC,IAAI,oBAAoB,CAACD,IAAI,iBAAiBC,IAAI,qBAA2BtB,EAAQ,CAACuB,MAAM,GAAGC,MAAM,SAASxB,QAAQ,CAAC,GAASyB,EAAkB,CAACC,MAAM,SAASC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,SAASC,YAAY,IAA2BC,EAAa,KAAK,MAAMC,EAAIpC,OAAOgB,EAA2D,EAAlEhB,IAA6EqC,EAASC,GAAatC,OAAOe,EAA6C,SAApDf,CAAuD,IAA8P,OAA1PA,OAAOe,EAA8C,UAArDf,EAAwD,KAAKwB,EAAQY,KAAInC,IAAO,IAAGwB,IAACA,EAAGC,IAACA,GAAKzB,EAAK,MAAMsC,EAAQvC,OAAOoB,EAAgD,OAAvDpB,CAA0D,CAAC0B,EAAID,GAAlX,GAA8XrB,GAAS,OAAOkC,GAAYE,GAAK,IAAIA,EAAID,IAAS,GAAG,GAAG,CAACH,IAAaC,EAASI,OAAO,EAAezC,OAAOsB,EAAqD,KAA5DtB,CAA+DsB,EAAyD,SAAE,CAACoB,SAAS,CAAc1C,OAAOsB,EAAoD,IAA3DtB,CAA8DiB,EAA4D,EAAE,CAACd,KAAKkC,EAASP,MAAM,MAAMC,OAAO,IAAiB/B,OAAOsB,EAAoD,IAA3DtB,CAA8DiB,EAA4D,EAAE,CAACd,KAAKH,OAAOoB,EAAmD,UAA1DpB,IAAgEqC,GAAU1B,MAAMkB,OAAuB,IAAI,EAA8hBnC,EAA6B,QAAviB,IAAwBM,OAAOsB,EAAqD,KAA5DtB,CAA+DkB,EAAiE,EAAE,CAACK,OAAOA,EAAOoB,KAAK,GAAGD,SAAS,CAAc1C,OAAOsB,EAAoD,IAA3DtB,CAA8DmB,EAA8D,EAAE,IAAIE,EAA8D,IAAiBrB,OAAOsB,EAAoD,IAA3DtB,CAA8DmC,EAAa,CAAC,KAE91D,EAED,GACA,SAAU1C,EAAQC,EAAqBC,GAE7C,aAC+LD,EAAuB,EAAtM,CAACkD,YAAY,2EAA2EC,IAAI,qDAErG"},"input":"(this[\"webpackJsonpreact-leaflet-examples\"] = this[\"webpackJsonpreact-leaflet-examples\"] || []).push([[38],{\n\n/***/ 117:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GeoJSON; });\n/* harmony import */ var _react_leaflet_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(89);\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79);\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst GeoJSON = Object(_react_leaflet_core__WEBPACK_IMPORTED_MODULE_0__[/* createPathComponent */ \"d\"])(function createGeoJSON(_ref, ctx) {\n  let {\n    data,\n    ...options\n  } = _ref;\n  const instance = new leaflet__WEBPACK_IMPORTED_MODULE_1__[\"GeoJSON\"](data, options);\n  return {\n    instance,\n    context: {\n      ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateGeoJSON(layer, props, prevProps) {\n  if (props.style !== prevProps.style) {\n    if (props.style == null) {\n      layer.resetStyle();\n    } else {\n      layer.setStyle(props.style);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 62:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(95);\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(117);\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(127);\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(92);\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(101);\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_turf_turf__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _util_tileLayer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(88);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(1);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__);\nconst center=[52.22977,21.01178];const centers=[{lat:52.22990558765487,lng:21.01168513298035},{lat:52.22962958994604,lng:21.011593937873844},{lat:52.2297445891999,lng:21.012012362480167}];const options={steps:64,units:'meters',options:{}};const intersectionColor={color:\"yellow\",weight:2,opacity:1,fillColor:\"yellow\",fillOpacity:0.7};const radius=30;const Intersection=()=>{const map=Object(react_leaflet__WEBPACK_IMPORTED_MODULE_1__[/* useMap */ \"a\"])();const[polygons,setPolygons]=Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])([]);Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(()=>{centers.map(_ref=>{let{lat,lng}=_ref;const polygon=Object(_turf_turf__WEBPACK_IMPORTED_MODULE_5__[\"circle\"])([lng,lat],radius,options);return setPolygons(pol=>[...pol,polygon]);});},[map]);return polygons.length>0?/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"Fragment\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_leaflet__WEBPACK_IMPORTED_MODULE_2__[/* GeoJSON */ \"a\"],{data:polygons,color:'red',weight:2}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_leaflet__WEBPACK_IMPORTED_MODULE_2__[/* GeoJSON */ \"a\"],{data:Object(_turf_turf__WEBPACK_IMPORTED_MODULE_5__[\"intersect\"])(...polygons),style:intersectionColor})]}):null;};const MapWrapper=()=>{return/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(react_leaflet__WEBPACK_IMPORTED_MODULE_3__[/* MapContainer */ \"a\"],{center:center,zoom:18,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_leaflet__WEBPACK_IMPORTED_MODULE_4__[/* TileLayer */ \"a\"],{..._util_tileLayer__WEBPACK_IMPORTED_MODULE_6__[/* default */ \"a\"]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Intersection,{})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (MapWrapper);\n\n/***/ }),\n\n/***/ 88:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nconst tileLayer={attribution:'&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',url:'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'};/* harmony default export */ __webpack_exports__[\"a\"] = (tileLayer);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/berkanium/Desktop/eys-react-leaflet/node_modules/react-leaflet/esm/GeoJSON.js","/Users/berkanium/Desktop/eys-react-leaflet/src/pages/part-of-the-common.js","/Users/berkanium/Desktop/eys-react-leaflet/src/util/tileLayer.js"],"names":["GeoJSON","createPathComponent","createGeoJSON","_ref","ctx","data","options","instance","LeafletGeoJSON","context","overlayContainer","updateGeoJSON","layer","props","prevProps","style","resetStyle","setStyle","center","centers","lat","lng","steps","units","intersectionColor","color","weight","opacity","fillColor","fillOpacity","radius","Intersection","map","useMap","polygons","setPolygons","useState","useEffect","polygon","circle","pol","length","_jsxs","_Fragment","children","_jsx","intersect","MapWrapper","MapContainer","zoom","TileLayer","tileLayer","attribution","url"],"mappings":"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","file":"x","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON(_ref, ctx) {\n  let {\n    data,\n    ...options\n  } = _ref;\n  const instance = new LeafletGeoJSON(data, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateGeoJSON(layer, props, prevProps) {\n  if (props.style !== prevProps.style) {\n    if (props.style == null) {\n      layer.resetStyle();\n    } else {\n      layer.setStyle(props.style);\n    }\n  }\n});","import { useState, useEffect } from 'react';\nimport { useMap, MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { circle, intersect } from '@turf/turf';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst centers = [\n  { lat: 52.22990558765487, lng: 21.01168513298035 },\n  { lat: 52.22962958994604, lng: 21.011593937873844 },\n  { lat: 52.2297445891999, lng: 21.012012362480167 }\n]\n\nconst options = {\n  steps: 64,\n  units: 'meters',\n  options: {}\n}\n\nconst intersectionColor = {\n  color: \"yellow\",\n  weight: 2,\n  opacity: 1,\n  fillColor: \"yellow\",\n  fillOpacity: 0.7\n};\n\nconst radius = 30;\n\nconst Intersection = () => {\n  const map = useMap();\n  const [polygons, setPolygons] = useState([])\n\n  useEffect(() => {\n\n    centers.map(({ lat, lng }) => {\n      const polygon = circle([lng, lat], radius, options);\n\n      return setPolygons(pol => [...pol, polygon]);\n    })\n\n  }, [map])\n\n  return polygons.length > 0\n    ? (\n      <>\n        <GeoJSON data={polygons} color={'red'} weight={2} />\n        <GeoJSON data={intersect(...polygons)} style={intersectionColor} />\n      </>\n    )\n    : null\n}\n\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer center={center} zoom={18}>\n\n      <TileLayer {...tileLayer} />\n\n      <Intersection />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;"]}}