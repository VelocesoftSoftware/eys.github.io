{"code":"(this[\"webpackJsonpreact-leaflet-examples\"]=this[\"webpackJsonpreact-leaflet-examples\"]||[]).push([[22],{113:function(t,e,o){\"use strict\";o.d(e,\"a\",(function(){return c}));var n=o(89),s=o(79);const c=Object(n.d)((function(t,e){let{positions:o,...n}=t;const c=new s.Polyline(o,n);return{instance:c,context:{...e,overlayContainer:c}}}),(function(t,e,o){e.positions!==o.positions&&t.setLatLngs(e.positions)}))},48:function(t,e,o){\"use strict\";o.r(e);var n=o(0),s=o(95),c=o(113),r=o(127),i=o(92),a=o(101),l=o(88),p=o(1);const u=[52.22977,19.01178],j=[[54.80068486732236,18.292236328125004],[53.89786522246521,14.611816406250002],[51.055207338584964,15.281982421875002],[49.57510247172322,19.138183593750004],[50.57626025689928,23.642578125000004],[52.214338608258224,23.148193359375004],[52.86912972768522,23.741455078125],[54.29729354239267,22.928466796875004],[54.29729354239267,19.489746093750004],[54.80068486732236,18.292236328125004]],b=()=>{const t=Object(s.a)(),[e,o]=Object(n.useState)(null);return Object(n.useEffect)((()=>{if(!t)return;const e=Object(a.polygon)([j]),n=Object(a.transformScale)(e,1.05),{coordinates:s}=n.geometry;o(s)}),[t]),e?Object(p.jsxs)(p.Fragment,{children:[Object(p.jsx)(c.a,{positions:j,fill:\"red\",color:\"red\"}),Object(p.jsx)(c.a,{positions:e,fill:\"white\",color:\"white\"})]}):null};e.default=()=>Object(p.jsxs)(r.a,{center:u,zoom:6,scrollWheelZoom:!1,children:[Object(p.jsx)(i.a,{...l.a}),Object(p.jsx)(b,{})]})},88:function(t,e,o){\"use strict\";e.a={attribution:'&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}}}]);","name":"static/js/pages-enlarge-a-polygon-box-by-5-percent-js.924cf55b.chunk.js","map":{"version":3,"names":["this","push","module","__webpack_exports__","__webpack_require__","d","Polyline","_react_leaflet_core__WEBPACK_IMPORTED_MODULE_0__","leaflet__WEBPACK_IMPORTED_MODULE_1__","Object","_ref","ctx","positions","options","instance","context","overlayContainer","layer","props","prevProps","setLatLngs","r","react__WEBPACK_IMPORTED_MODULE_0__","react_leaflet__WEBPACK_IMPORTED_MODULE_1__","react_leaflet__WEBPACK_IMPORTED_MODULE_2__","react_leaflet__WEBPACK_IMPORTED_MODULE_3__","react_leaflet__WEBPACK_IMPORTED_MODULE_4__","_turf_turf__WEBPACK_IMPORTED_MODULE_5__","_util_tileLayer__WEBPACK_IMPORTED_MODULE_6__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__","center","poland","MyCountry","map","newCoordinates","setCoordinates","poly","scalePoly","coordinates","geometry","children","fill","color","zoom","scrollWheelZoom","attribution","url"],"sources":["static/js/pages-enlarge-a-polygon-box-by-5-percent-js.924cf55b.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErG,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,aAC+BA,EAAoBC,EAAEF,EAAqB,KAAK,WAAa,OAAOG,CAAU,IACxF,IAAIC,EAAmDH,EAAoB,IACvEI,EAAuCJ,EAAoB,IAIpF,MAAME,EAAWG,OAAOF,EAA8E,EAArFE,EAAwF,SAAwBC,EAAMC,GACrI,IAAIC,UACFA,KACGC,GACDH,EACJ,MAAMI,EAAW,IAAIN,EAA+C,SAAEI,EAAWC,GACjF,MAAO,CACLC,WACAC,QAAS,IACJJ,EACHK,iBAAkBF,GAGxB,IAAG,SAAwBG,EAAOC,EAAOC,GACnCD,EAAMN,YAAcO,EAAUP,WAChCK,EAAMG,WAAWF,EAAMN,UAE3B,GAEO,EAED,GACA,SAAUV,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBiB,EAAElB,GACD,IAAImB,EAAqClB,EAAoB,GAEzDmB,EAA6CnB,EAAoB,IACjEoB,EAA6CpB,EAAoB,KACjEqB,EAA6CrB,EAAoB,KACjEsB,EAA6CtB,EAAoB,IACjEuB,EAA0CvB,EAAoB,KAE9DwB,EAA+CxB,EAAoB,IACnEyB,EAAiDzB,EAAoB,GAE9F,MAAM0B,EAAO,CAAC,SAAS,UAAgBC,EAAO,CAAC,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,iBAAiB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,qBAA2BC,EAAU,KAAK,MAAMC,EAAIxB,OAAOc,EAA2D,EAAlEd,IAA6EyB,EAAeC,GAAgB1B,OAAOa,EAA6C,SAApDb,CAAuD,MAA0U,OAApUA,OAAOa,EAA8C,UAArDb,EAAwD,KAAK,IAAIwB,EAAI,OAAO,MAAMG,EAAK3B,OAAOkB,EAAiD,QAAxDlB,CAA2D,CAACsB,IAAeM,EAAU5B,OAAOkB,EAAwD,eAA/DlB,CAAkE2B,EAAK,OAAWE,YAACA,GAAaD,EAAUE,SAASJ,EAAeG,EAAY,GAAG,CAACL,IAAaC,EAA4BzB,OAAOoB,EAAqD,KAA5DpB,CAA+DoB,EAAyD,SAAE,CAACW,SAAS,CAAc/B,OAAOoB,EAAoD,IAA3DpB,CAA8De,EAA6D,EAAE,CAACZ,UAAUmB,EAAOU,KAAK,MAAMC,MAAM,QAAqBjC,OAAOoB,EAAoD,IAA3DpB,CAA8De,EAA6D,EAAE,CAACZ,UAAUsB,EAAeO,KAAK,QAAQC,MAAM,aAAa,IAAI,EAAgjBvC,EAA6B,QAAzjB,IAAwBM,OAAOoB,EAAqD,KAA5DpB,CAA+DgB,EAAiE,EAAE,CAACK,OAAOA,EAAOa,KAAK,EAAEC,iBAAgB,EAAMJ,SAAS,CAAc/B,OAAOoB,EAAoD,IAA3DpB,CAA8DiB,EAA8D,EAAE,IAAIE,EAA8D,IAAiBnB,OAAOoB,EAAoD,IAA3DpB,CAA8DuB,EAAU,CAAC,KAE1+D,EAED,GACA,SAAU9B,EAAQC,EAAqBC,GAE7C,aAC+LD,EAAuB,EAAtM,CAAC0C,YAAY,2EAA2EC,IAAI,qDAErG"},"input":"(this[\"webpackJsonpreact-leaflet-examples\"] = this[\"webpackJsonpreact-leaflet-examples\"] || []).push([[22],{\n\n/***/ 113:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Polyline; });\n/* harmony import */ var _react_leaflet_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(89);\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79);\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst Polyline = Object(_react_leaflet_core__WEBPACK_IMPORTED_MODULE_0__[/* createPathComponent */ \"d\"])(function createPolyline(_ref, ctx) {\n  let {\n    positions,\n    ...options\n  } = _ref;\n  const instance = new leaflet__WEBPACK_IMPORTED_MODULE_1__[\"Polyline\"](positions, options);\n  return {\n    instance,\n    context: {\n      ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updatePolyline(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});\n\n/***/ }),\n\n/***/ 48:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(95);\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(113);\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(127);\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(92);\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(101);\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_turf_turf__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _util_tileLayer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(88);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(1);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__);\nconst center=[52.22977,19.01178];const poland=[[54.80068486732236,18.292236328125004],[53.89786522246521,14.611816406250002],[51.055207338584964,15.281982421875002],[49.57510247172322,19.138183593750004],[50.57626025689928,23.642578125000004],[52.214338608258224,23.148193359375004],[52.86912972768522,23.741455078125],[54.29729354239267,22.928466796875004],[54.29729354239267,19.489746093750004],[54.80068486732236,18.292236328125004]];const MyCountry=()=>{const map=Object(react_leaflet__WEBPACK_IMPORTED_MODULE_1__[/* useMap */ \"a\"])();const[newCoordinates,setCoordinates]=Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(null);Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(()=>{if(!map)return;const poly=Object(_turf_turf__WEBPACK_IMPORTED_MODULE_5__[\"polygon\"])([poland]);const scalePoly=Object(_turf_turf__WEBPACK_IMPORTED_MODULE_5__[\"transformScale\"])(poly,1.05);const{coordinates}=scalePoly.geometry;setCoordinates(coordinates);},[map]);return newCoordinates?/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"Fragment\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_leaflet__WEBPACK_IMPORTED_MODULE_2__[/* Polyline */ \"a\"],{positions:poland,fill:'red',color:'red'}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_leaflet__WEBPACK_IMPORTED_MODULE_2__[/* Polyline */ \"a\"],{positions:newCoordinates,fill:'white',color:'white'})]}):null;};const MapWrapper=()=>{return/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(react_leaflet__WEBPACK_IMPORTED_MODULE_3__[/* MapContainer */ \"a\"],{center:center,zoom:6,scrollWheelZoom:false,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_leaflet__WEBPACK_IMPORTED_MODULE_4__[/* TileLayer */ \"a\"],{..._util_tileLayer__WEBPACK_IMPORTED_MODULE_6__[/* default */ \"a\"]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(MyCountry,{})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (MapWrapper);\n\n/***/ }),\n\n/***/ 88:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nconst tileLayer={attribution:'&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',url:'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'};/* harmony default export */ __webpack_exports__[\"a\"] = (tileLayer);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/berkanium/Desktop/eys-react-leaflet/node_modules/react-leaflet/esm/Polyline.js","/Users/berkanium/Desktop/eys-react-leaflet/src/pages/enlarge-a-polygon-box-by-5-percent.js","/Users/berkanium/Desktop/eys-react-leaflet/src/util/tileLayer.js"],"names":["Polyline","createPathComponent","createPolyline","_ref","ctx","positions","options","instance","LeafletPolyline","context","overlayContainer","updatePolyline","layer","props","prevProps","setLatLngs","center","poland","MyCountry","map","useMap","newCoordinates","setCoordinates","useState","useEffect","poly","polygon","scalePoly","transformScale","coordinates","geometry","_jsxs","_Fragment","children","_jsx","fill","color","MapWrapper","MapContainer","zoom","scrollWheelZoom","TileLayer","tileLayer","attribution","url"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAA0D;AACJ;AAC/C,MAAMA,QAAQ,GAAGC,uFAAmB,CAAC,SAASC,cAAcA,CAACC,IAAI,EAAEC,GAAG,EAAE;EAC7E,IAAI;IACFC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGH,IAAI;EACR,MAAMI,QAAQ,GAAG,IAAIC,gDAAe,CAACH,SAAS,EAAEC,OAAO,CAAC;EACxD,OAAO;IACLC,QAAQ;IACRE,OAAO,EAAE;MAAE,GAAGL,GAAG;MACfM,gBAAgB,EAAEH;IACpB;EACF,CAAC;AACH,CAAC,EAAE,SAASI,cAAcA,CAACC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAE;EAClD,IAAID,KAAK,CAACR,SAAS,KAAKS,SAAS,CAACT,SAAS,EAAE;IAC3CO,KAAK,CAACG,UAAU,CAACF,KAAK,CAACR,SAAS,CAAC;EACnC;AACF,CAAC,CAAC,C;;;;;;;;AClBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KAAM,CAAAW,MAAM,CAAG,CAAC,QAAQ,CAAE,QAAQ,CAAC,CAEnC,KAAM,CAAAC,MAAM,CAAG,CACb,CAAC,iBAAiB,CAAE,kBAAkB,CAAC,CACvC,CAAC,iBAAiB,CAAE,kBAAkB,CAAC,CACvC,CAAC,kBAAkB,CAAE,kBAAkB,CAAC,CACxC,CAAC,iBAAiB,CAAE,kBAAkB,CAAC,CACvC,CAAC,iBAAiB,CAAE,kBAAkB,CAAC,CACvC,CAAC,kBAAkB,CAAE,kBAAkB,CAAC,CACxC,CAAC,iBAAiB,CAAE,eAAe,CAAC,CACpC,CAAC,iBAAiB,CAAE,kBAAkB,CAAC,CACvC,CAAC,iBAAiB,CAAE,kBAAkB,CAAC,CACvC,CAAC,iBAAiB,CAAE,kBAAkB,CAAC,CACxC,CAED,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAC,GAAG,CAAGC,oEAAM,CAAC,CAAC,CACpB,KAAM,CAACC,cAAc,CAAEC,cAAc,CAAC,CAAGC,sDAAQ,CAAC,IAAI,CAAC,CAEvDC,uDAAS,CAAC,IAAM,CACd,GAAI,CAACL,GAAG,CAAE,OAEV,KAAM,CAAAM,IAAI,CAAGC,0DAAO,CAAC,CAACT,MAAM,CAAC,CAAC,CAC9B,KAAM,CAAAU,SAAS,CAAGC,iEAAc,CAACH,IAAI,CAAE,IAAI,CAAC,CAE5C,KAAM,CAAEI,WAAY,CAAC,CAAGF,SAAS,CAACG,QAAQ,CAE1CR,cAAc,CAACO,WAAW,CAAC,CAE7B,CAAC,CAAE,CAACV,GAAG,CAAC,CAAC,CAET,MAAO,CAAAE,cAAc,cAEjBU,8DAAA,CAAAC,0DAAA,EAAAC,QAAA,eACEC,6DAAA,CAAClC,8DAAQ,EAACK,SAAS,CAAEY,MAAO,CAACkB,IAAI,CAAE,KAAM,CAACC,KAAK,CAAE,KAAM,CAAE,CAAC,cAC1DF,6DAAA,CAAClC,8DAAQ,EAACK,SAAS,CAAEgB,cAAe,CAACc,IAAI,CAAE,OAAQ,CAACC,KAAK,CAAE,OAAQ,CAAE,CAAC,EACtE,CAAC,CAEH,IAAI,CAEV,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,mBACEN,8DAAA,CAACO,kEAAY,EACXtB,MAAM,CAAEA,MAAO,CAACuB,IAAI,CAAE,CAAE,CACxBC,eAAe,CAAE,KAAM,CAAAP,QAAA,eAEvBC,6DAAA,CAACO,+DAAS,KAAKC,+DAAS,CAAG,CAAC,cAE5BR,6DAAA,CAAChB,SAAS,GAAE,CAAC,EAED,CAAC,CAEnB,CAAC,CAEcmB,yEAAU,E;;;;;;;;AC7DzB,KAAM,CAAAK,SAAS,CAAG,CAChBC,WAAW,CAAE,0EAA0E,CACvFC,GAAG,CAAE,oDACP,CAAC,CAEcF,kEAAS,E","file":"x","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline(_ref, ctx) {\n  let {\n    positions,\n    ...options\n  } = _ref;\n  const instance = new LeafletPolyline(positions, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updatePolyline(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","import { useEffect, useState } from 'react';\nimport { MapContainer, useMap, TileLayer, Polyline } from 'react-leaflet';\nimport { polygon, transformScale } from '@turf/turf';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 19.01178];\n\nconst poland = [\n  [54.80068486732236, 18.292236328125004],\n  [53.89786522246521, 14.611816406250002],\n  [51.055207338584964, 15.281982421875002],\n  [49.57510247172322, 19.138183593750004],\n  [50.57626025689928, 23.642578125000004],\n  [52.214338608258224, 23.148193359375004],\n  [52.86912972768522, 23.741455078125],\n  [54.29729354239267, 22.928466796875004],\n  [54.29729354239267, 19.489746093750004],\n  [54.80068486732236, 18.292236328125004]\n];\n\nconst MyCountry = () => {\n  const map = useMap();\n  const [newCoordinates, setCoordinates] = useState(null)\n\n  useEffect(() => {\n    if (!map) return\n\n    const poly = polygon([poland]);\n    const scalePoly = transformScale(poly, 1.05)\n\n    const { coordinates } = scalePoly.geometry;\n\n    setCoordinates(coordinates);\n\n  }, [map])\n\n  return newCoordinates\n    ? (\n      <>\n        <Polyline positions={poland} fill={'red'} color={'red'} />\n        <Polyline positions={newCoordinates} fill={'white'} color={'white'} />\n      </>\n    )\n    : null\n\n}\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer\n      center={center} zoom={6}\n      scrollWheelZoom={false}\n    >\n      <TileLayer {...tileLayer} />\n\n      <MyCountry />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;"]}}