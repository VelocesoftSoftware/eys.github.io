{"ast":null,"code":"var _jsxFileName = \"/Users/berkanium/Desktop/eys-react-leaflet/src/pages/svg-markers-width-legends.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, LayersControl } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Overlay\n} = LayersControl;\nconst center = [39.9334, 32.8597]; // Ankara koordinatları\nconst defaultZoom = 6;\n\n// İkonları buradan değiştirebilirsiniz veya farklı ikonlar ekleyebilirsiniz\nconst iconTypes = {\n  \"Kavşak\": \"intersection-icon\",\n  \"Yol\": \"road-icon\"\n  // Ek ikonlar buraya eklenebilir\n};\nconst createIcon = iconType => {\n  return L.icon({\n    iconUrl: require(\"../assets/\".concat(iconType, \".png\")).default,\n    iconSize: [30, 30],\n    iconAnchor: [15, 30],\n    popupAnchor: [0, -30]\n  });\n};\nconst MyMarkers = _ref => {\n  let {\n    data\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [parseFloat(item.latitude), parseFloat(item.longitude)],\n      icon: createIcon(iconTypes[item.type]),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Kav\\u015Fak Ad\\u0131:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 18\n            }, this), \" \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Kav\\u015Fak Tipi:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 18\n            }, this), \" \", item.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = MyMarkers;\nconst PanoramaMarkers = _ref2 => {\n  let {\n    data\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((panorama, index) => /*#__PURE__*/_jsxDEV(Overlay, {\n      name: panorama.name,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: [panorama.latitude, panorama.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: panorama.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: panorama.image,\n              alt: \"Panorama\",\n              style: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c2 = PanoramaMarkers;\nconst TKGMMap = () => {\n  _s();\n  const [intersections, setIntersections] = useState([]);\n  const [panoramas, setPanoramas] = useState([]);\n\n  // Örnek veri\n  const sampleIntersections = [{\n    name: \"Ankara Kavşağı\",\n    type: \"Kavşak\",\n    latitude: 39.9334,\n    longitude: 32.8597\n  }, {\n    name: \"İstanbul Kavşağı\",\n    type: \"Kavşak\",\n    latitude: 41.0082,\n    longitude: 28.9784\n  }\n  // Diğer örnek veriler buraya eklenebilir\n  ];\n  const samplePanoramas = [{\n    name: \"Ankara Kavşağı\",\n    latitude: 39.9334,\n    longitude: 32.8597,\n    image: \"ankara_kavsagi.jpg\"\n  }, {\n    name: \"İstanbul Kavşağı\",\n    latitude: 41.0082,\n    longitude: 28.9784,\n    image: \"istanbul_kavsagi.jpg\"\n  }\n  // Diğer örnek veriler buraya eklenebilir\n  ];\n  useEffect(() => {\n    setIntersections(sampleIntersections);\n    setPanoramas(samplePanoramas);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: defaultZoom,\n    scrollWheelZoom: true,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      ...tileLayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyMarkers, {\n      data: intersections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PanoramaMarkers, {\n      data: panoramas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(TKGMMap, \"m2vLutEaetCxJqjxFiVE0DOTCqU=\");\n_c3 = TKGMMap;\nexport default TKGMMap;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MyMarkers\");\n$RefreshReg$(_c2, \"PanoramaMarkers\");\n$RefreshReg$(_c3, \"TKGMMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","LayersControl","L","tileLayer","jsxDEV","_jsxDEV","Fragment","_Fragment","Overlay","center","defaultZoom","iconTypes","createIcon","iconType","icon","iconUrl","require","concat","default","iconSize","iconAnchor","popupAnchor","MyMarkers","_ref","data","children","map","item","index","position","parseFloat","latitude","longitude","type","className","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","PanoramaMarkers","_ref2","panorama","src","image","alt","style","width","_c2","TKGMMap","_s","intersections","setIntersections","panoramas","setPanoramas","sampleIntersections","samplePanoramas","zoom","scrollWheelZoom","_c3","$RefreshReg$"],"sources":["/Users/berkanium/Desktop/eys-react-leaflet/src/pages/svg-markers-width-legends.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"; \nimport { MapContainer, TileLayer, Marker, Popup, LayersControl } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst { Overlay } = LayersControl;\n\nconst center = [39.9334, 32.8597]; // Ankara koordinatları\nconst defaultZoom = 6;\n\n// İkonları buradan değiştirebilirsiniz veya farklı ikonlar ekleyebilirsiniz\nconst iconTypes = {\n  \"Kavşak\": \"intersection-icon\",\n  \"Yol\": \"road-icon\",\n  // Ek ikonlar buraya eklenebilir\n};\n\nconst createIcon = (iconType) => {\n  return L.icon({\n    iconUrl: require(`../assets/${iconType}.png`).default,\n    iconSize: [30, 30],\n    iconAnchor: [15, 30],\n    popupAnchor: [0, -30],\n  });\n};\n\nconst MyMarkers = ({ data }) => {\n  return (\n    <>\n      {data.map((item, index) => (\n        <Marker\n          key={index}\n          position={[parseFloat(item.latitude), parseFloat(item.longitude)]}\n          icon={createIcon(iconTypes[item.type])}\n        >\n          <Popup>\n            <div className=\"popup-content\">\n              <p><strong>Kavşak Adı:</strong> {item.name}</p>\n              <p><strong>Kavşak Tipi:</strong> {item.type}</p>\n              {/* Diğer bilgiler buraya eklenebilir */}\n            </div>\n          </Popup>\n        </Marker>\n      ))}\n    </>\n  );\n};\n\nconst PanoramaMarkers = ({ data }) => {\n  return (\n    <>\n      {data.map((panorama, index) => (\n        <Overlay key={index} name={panorama.name}>\n          <Marker position={[panorama.latitude, panorama.longitude]}>\n            <Popup>\n              <div>\n                <h3>{panorama.name}</h3>\n                <img src={panorama.image} alt={`Panorama`} style={{ width: \"100%\" }} />\n              </div>\n            </Popup>\n          </Marker>\n        </Overlay>\n      ))}\n    </>\n  );\n};\n\nconst TKGMMap = () => {\n  const [intersections, setIntersections] = useState([]);\n  const [panoramas, setPanoramas] = useState([]);\n\n  // Örnek veri\n  const sampleIntersections = [\n    { name: \"Ankara Kavşağı\", type: \"Kavşak\", latitude: 39.9334, longitude: 32.8597 },\n    { name: \"İstanbul Kavşağı\", type: \"Kavşak\", latitude: 41.0082, longitude: 28.9784 },\n    // Diğer örnek veriler buraya eklenebilir\n  ];\n\n  const samplePanoramas = [\n    { name: \"Ankara Kavşağı\", latitude: 39.9334, longitude: 32.8597, image: \"ankara_kavsagi.jpg\" },\n    { name: \"İstanbul Kavşağı\", latitude: 41.0082, longitude: 28.9784, image: \"istanbul_kavsagi.jpg\" },\n    // Diğer örnek veriler buraya eklenebilir\n  ];\n\n  useEffect(() => {\n    setIntersections(sampleIntersections);\n    setPanoramas(samplePanoramas);\n  }, []);\n\n  return (\n    <MapContainer\n      center={center}\n      zoom={defaultZoom}\n      scrollWheelZoom={true} \n    >\n      <TileLayer {...tileLayer} />\n      \n      <MyMarkers data={intersections} />\n      <PanoramaMarkers data={panoramas} />\n    </MapContainer>\n  );\n};\n\nexport default TKGMMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}