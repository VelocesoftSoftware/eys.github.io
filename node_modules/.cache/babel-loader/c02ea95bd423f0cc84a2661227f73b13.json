{"ast":null,"code":"var _jsxFileName = \"/Users/berkanium/Desktop/eys-react-leaflet/src/pages/enlarge-a-polygon-box-by-5-percent.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { MapContainer, useMap, TileLayer, Polyline } from 'react-leaflet';\nimport { polygon, transformScale } from '@turf/turf';\nimport tileLayer from '../util/tileLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst center = [52.22977, 19.01178];\nconst poland = [[54.80068486732236, 18.292236328125004], [53.89786522246521, 14.611816406250002], [51.055207338584964, 15.281982421875002], [49.57510247172322, 19.138183593750004], [50.57626025689928, 23.642578125000004], [52.214338608258224, 23.148193359375004], [52.86912972768522, 23.741455078125], [54.29729354239267, 22.928466796875004], [54.29729354239267, 19.489746093750004], [54.80068486732236, 18.292236328125004]];\nconst MyCountry = () => {\n  _s();\n  const map = useMap();\n  const [newCoordinates, setCoordinates] = useState(null);\n  useEffect(() => {\n    if (!map) return;\n    const poly = polygon([poland]);\n    const scalePoly = transformScale(poly, 1.05);\n    const {\n      coordinates\n    } = scalePoly.geometry;\n    setCoordinates(coordinates);\n  }, [map]);\n  return newCoordinates ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Polyline, {\n      positions: poland,\n      fill: 'red',\n      color: 'red'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: newCoordinates,\n      fill: 'white',\n      color: 'white'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : null;\n};\n_s(MyCountry, \"DFmrym5QtrSLOPKxSW8YsbbcIqk=\", false, function () {\n  return [useMap];\n});\n_c = MyCountry;\nconst MapWrapper = () => {\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 6,\n    scrollWheelZoom: false,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      ...tileLayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyCountry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MapWrapper;\nexport default MapWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyCountry\");\n$RefreshReg$(_c2, \"MapWrapper\");","map":{"version":3,"names":["useEffect","useState","MapContainer","useMap","TileLayer","Polyline","polygon","transformScale","tileLayer","jsxDEV","_jsxDEV","Fragment","_Fragment","center","poland","MyCountry","_s","map","newCoordinates","setCoordinates","poly","scalePoly","coordinates","geometry","children","positions","fill","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","MapWrapper","zoom","scrollWheelZoom","_c2","$RefreshReg$"],"sources":["/Users/berkanium/Desktop/eys-react-leaflet/src/pages/enlarge-a-polygon-box-by-5-percent.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { MapContainer, useMap, TileLayer, Polyline } from 'react-leaflet';\nimport { polygon, transformScale } from '@turf/turf';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 19.01178];\n\nconst poland = [\n  [54.80068486732236, 18.292236328125004],\n  [53.89786522246521, 14.611816406250002],\n  [51.055207338584964, 15.281982421875002],\n  [49.57510247172322, 19.138183593750004],\n  [50.57626025689928, 23.642578125000004],\n  [52.214338608258224, 23.148193359375004],\n  [52.86912972768522, 23.741455078125],\n  [54.29729354239267, 22.928466796875004],\n  [54.29729354239267, 19.489746093750004],\n  [54.80068486732236, 18.292236328125004]\n];\n\nconst MyCountry = () => {\n  const map = useMap();\n  const [newCoordinates, setCoordinates] = useState(null)\n\n  useEffect(() => {\n    if (!map) return\n\n    const poly = polygon([poland]);\n    const scalePoly = transformScale(poly, 1.05)\n\n    const { coordinates } = scalePoly.geometry;\n\n    setCoordinates(coordinates);\n\n  }, [map])\n\n  return newCoordinates\n    ? (\n      <>\n        <Polyline positions={poland} fill={'red'} color={'red'} />\n        <Polyline positions={newCoordinates} fill={'white'} color={'white'} />\n      </>\n    )\n    : null\n\n}\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer\n      center={center} zoom={6}\n      scrollWheelZoom={false}\n    >\n      <TileLayer {...tileLayer} />\n\n      <MyCountry />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}