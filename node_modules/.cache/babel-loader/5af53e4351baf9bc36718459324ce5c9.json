{"ast":null,"code":"var _jsxFileName = \"/Users/berkanium/Desktop/eys-react-leaflet/src/pages/svg-markers-width-legends.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, LayersControl, Pol } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  BaseLayer,\n  Overlay\n} = LayersControl;\nconst center = [39.9334, 32.8597]; // Ankara koordinatları\nconst defaultZoom = 6;\nconst MyMarkers = _ref => {\n  let {\n    data,\n    handleMarkerClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [parseFloat(item.latitude), parseFloat(item.longitude)],\n      eventHandlers: {\n        click: () => handleMarkerClick(item)\n      },\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Kav\\u015Fak Ad\\u0131:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 18\n            }, this), \" \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Kav\\u015Fak Tipi:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 18\n            }, this), \" \", item.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = MyMarkers;\nconst MapWrapper = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [intersections, setIntersections] = useState([]);\n  const [selectedIntersection, setSelectedIntersection] = useState(null);\n\n  // Örnek veri\n  const sampleIntersections = [{\n    name: \"Ankara Kavşağı\",\n    type: \"Kavşak\",\n    latitude: 39.9334,\n    longitude: 32.8597\n  }, {\n    name: \"İstanbul Kavşağı\",\n    type: \"Kavşak\",\n    latitude: 41.0082,\n    longitude: 28.9784\n  }\n  // Diğer örnek veriler buraya eklenebilir\n  ];\n  useEffect(() => {\n    setIntersections(sampleIntersections);\n  }, []);\n  const handleViewportChanged = viewport => {\n    const bounds = map.getBounds();\n    const NE = bounds.getNorthEast();\n    const SW = bounds.getSouthWest();\n\n    // Burada haritada görünen bölgenin koordinatlarını kullanarak\n    // bu bölge için verileri getirebilir ve setIntersections ile güncelleyebilirsiniz\n    console.log(\"Kuzeydoğu Koordinatları:\", NE);\n    console.log(\"Güneybatı Koordinatları:\", SW);\n  };\n  const handleMarkerClick = intersection => {\n    setSelectedIntersection(intersection);\n  };\n  const polygonPositions = [[39.95, 32.85],\n  // Birinci köşe\n  [40.00, 32.85],\n  // İkinci köşe\n  [40.00, 32.90],\n  // Üçüncü köşe\n  [39.95, 32.90] // Dördüncü köşe\n  ];\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    whenCreated: setMap,\n    center: center,\n    zoom: defaultZoom,\n    scrollWheelZoom: true,\n    onViewportChanged: handleViewportChanged,\n    children: [/*#__PURE__*/_jsxDEV(LayersControl, {\n      position: \"topright\",\n      children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n        checked: true,\n        name: \"OpenStreetMap\",\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          ...tileLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n        checked: true,\n        name: \"Kav\\u015Faklar\",\n        children: /*#__PURE__*/_jsxDEV(MyMarkers, {\n          data: intersections,\n          handleMarkerClick: handleMarkerClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), selectedIntersection && /*#__PURE__*/_jsxDEV(Popup, {\n      position: [selectedIntersection.latitude, selectedIntersection.longitude],\n      onClose: () => setSelectedIntersection(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedIntersection.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Kav\\u015Fak Tipi:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 16\n          }, this), \" \", selectedIntersection.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Polygon, {\n      pathOptions: {\n        color: 'blue'\n      },\n      positions: polygonPositions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(MapWrapper, \"jT5+LDtSgqpGkrCp76DlQNDs2+8=\");\n_c2 = MapWrapper;\nexport default MapWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyMarkers\");\n$RefreshReg$(_c2, \"MapWrapper\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","LayersControl","Pol","L","tileLayer","jsxDEV","_jsxDEV","Fragment","_Fragment","BaseLayer","Overlay","center","defaultZoom","MyMarkers","_ref","data","handleMarkerClick","children","map","item","index","position","parseFloat","latitude","longitude","eventHandlers","click","className","fileName","_jsxFileName","lineNumber","columnNumber","name","type","_c","MapWrapper","_s","setMap","intersections","setIntersections","selectedIntersection","setSelectedIntersection","sampleIntersections","handleViewportChanged","viewport","bounds","getBounds","NE","getNorthEast","SW","getSouthWest","console","log","intersection","polygonPositions","whenCreated","zoom","scrollWheelZoom","onViewportChanged","checked","onClose","Polygon","pathOptions","color","positions","_c2","$RefreshReg$"],"sources":["/Users/berkanium/Desktop/eys-react-leaflet/src/pages/svg-markers-width-legends.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"; \nimport { MapContainer, TileLayer, Marker, Popup, LayersControl,Pol } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst { BaseLayer, Overlay } = LayersControl;\n\nconst center = [39.9334, 32.8597]; // Ankara koordinatları\nconst defaultZoom = 6;\n\nconst MyMarkers = ({ data, handleMarkerClick }) => {\n  return (\n    <>\n      {data.map((item, index) => (\n        <Marker\n          key={index}\n          position={[parseFloat(item.latitude), parseFloat(item.longitude)]}\n          eventHandlers={{\n            click: () => handleMarkerClick(item),\n          }}\n        >\n          <Popup>\n            <div className=\"popup-content\">\n              <p><strong>Kavşak Adı:</strong> {item.name}</p>\n              <p><strong>Kavşak Tipi:</strong> {item.type}</p>\n              {/* Diğer bilgiler buraya eklenebilir */}\n            </div>\n          </Popup>\n        </Marker>\n      ))}\n    </>\n  );\n};\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n  const [intersections, setIntersections] = useState([]);\n  const [selectedIntersection, setSelectedIntersection] = useState(null);\n\n  // Örnek veri\n  const sampleIntersections = [\n    { name: \"Ankara Kavşağı\", type: \"Kavşak\", latitude: 39.9334, longitude: 32.8597 },\n    { name: \"İstanbul Kavşağı\", type: \"Kavşak\", latitude: 41.0082, longitude: 28.9784 },\n    // Diğer örnek veriler buraya eklenebilir\n  ];\n\n  useEffect(() => {\n    setIntersections(sampleIntersections);\n  }, []);\n\n  const handleViewportChanged = (viewport) => {\n    const bounds = map.getBounds();\n    const NE = bounds.getNorthEast();\n    const SW = bounds.getSouthWest();\n    \n    // Burada haritada görünen bölgenin koordinatlarını kullanarak\n    // bu bölge için verileri getirebilir ve setIntersections ile güncelleyebilirsiniz\n    console.log(\"Kuzeydoğu Koordinatları:\", NE);\n    console.log(\"Güneybatı Koordinatları:\", SW);\n  };\n\n  const handleMarkerClick = (intersection) => {\n    setSelectedIntersection(intersection);\n  };\n\n  const polygonPositions = [\n    [39.95, 32.85], // Birinci köşe\n    [40.00, 32.85], // İkinci köşe\n    [40.00, 32.90], // Üçüncü köşe\n    [39.95, 32.90], // Dördüncü köşe\n  ];\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={defaultZoom}\n      scrollWheelZoom={true} \n      onViewportChanged={handleViewportChanged}\n    >\n      <LayersControl position=\"topright\">\n        <BaseLayer checked name=\"OpenStreetMap\">\n          <TileLayer {...tileLayer} />\n        </BaseLayer>\n        {/* İsteğe bağlı olarak farklı harita katmanları eklenebilir */}\n\n        <Overlay checked name=\"Kavşaklar\">\n          <MyMarkers data={intersections} handleMarkerClick={handleMarkerClick} />\n        </Overlay>\n      </LayersControl>\n\n      {selectedIntersection && (\n        <Popup position={[selectedIntersection.latitude, selectedIntersection.longitude]} onClose={() => setSelectedIntersection(null)}>\n          <div>\n            <h3>{selectedIntersection.name}</h3>\n            <p><strong>Kavşak Tipi:</strong> {selectedIntersection.type}</p>\n            {/* Diğer bilgiler buraya eklenebilir */}\n          </div>\n        </Popup>\n      )}\n\n      {/* Alanı çizmek için polygon kullanımı */}\n      <Polygon pathOptions={{ color: 'blue' }} positions={polygonPositions} />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}