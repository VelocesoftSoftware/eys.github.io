{"ast":null,"code":"var _jsxFileName = \"/Users/berkanium/Desktop/eys-react-leaflet/src/pages/random-marker-in-map-bounds.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport styles from \"./random-marker-in-map-bounds.module.css\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [52.22977, 21.01178];\n\n// RandomMarkerInMapBounds\nconst RandomMarkerInMapBounds = _ref => {\n  _s();\n  let {\n    map\n  } = _ref;\n  useEffect(() => {\n    if (!map) return;\n    const legend = L.control({\n      position: \"bottomleft\"\n    });\n    legend.onAdd = function () {\n      let div = L.DomUtil.create(\"div\", \"description\");\n      L.DomEvent.disableClickPropagation(div);\n      const text = \"Dynamic generation of 30 markers in the map view\";\n      div.insertAdjacentHTML(\"beforeend\", text);\n      return div;\n    };\n    legend.addTo(map);\n\n    // add \"random\" button\n    const buttonTemplate = '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path d=\"M24 22h-3.172l-5-5 5-5h3.172v5l7-7-7-7v5h-4c-0.53 0-1.039 0.211-1.414 0.586l-5.586 5.586-5.586-5.586c-0.375-0.375-0.884-0.586-1.414-0.586h-6v4h5.172l5 5-5 5h-5.172v4h6c0.53 0 1.039-0.211 1.414-0.586l5.586-5.586 5.586 5.586c0.375 0.375 0.884 0.586 1.414 0.586h4v5l7-7-7-7v5z\" /></svg>';\n\n    // create custom button\n    const customControl = L.Control.extend({\n      // button position\n      options: {\n        position: \"topleft\",\n        title: \"random marker\",\n        className: styles.leafletRandomMarker\n      },\n      // method\n      onAdd: function (map) {\n        this._map = map;\n        return this._initialLayout();\n      },\n      _initialLayout: function () {\n        // create button\n        const container = L.DomUtil.create(\"div\", \"leaflet-bar \" + this.options.className);\n        this._container = container;\n        L.DomEvent.disableClickPropagation(container);\n        container.title = this.options.title;\n        container.innerHTML = buttonTemplate;\n\n        // action when clik on button\n        // clear and add radnom marker\n        L.DomEvent.on(container, \"mousedown dblclic\", L.DomEvent.stopPropagation).on(container, \"click\", L.DomEvent.stop).on(container, \"click\", removeMarkers).on(container, \"click\", randomMarker);\n        return this._container;\n      }\n    });\n\n    // adding new button to map controll\n    map.addControl(new customControl());\n\n    // random color\n    // ------------------------------\n    const randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\n\n    // create legend\n    // ------------------------------\n\n    // add feature group to map\n    const fg = L.featureGroup().addTo(map);\n\n    // create random marker\n    function randomMarker() {\n      // get bounds of map\n      const bounds = map.getBounds();\n      let southWest = bounds.getSouthWest();\n      let northEast = bounds.getNorthEast();\n      let lngSpan = northEast.lng - southWest.lng;\n      let latSpan = northEast.lat - southWest.lat;\n      let allPoints = [];\n\n      // generate random points and add to array 'allPoints'\n      for (let i = 0; i < 30; i++) {\n        let points = [southWest.lat + latSpan * Math.random(), southWest.lng + lngSpan * Math.random()];\n        allPoints.push(points);\n      }\n\n      // add markers to feature group\n      for (let i = 0; i < allPoints.length; i++) {\n        L.marker(allPoints[i], {\n          icon: L.divIcon({\n            className: \"custom-icon-marker\",\n            iconSize: L.point(40, 40),\n            html: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 32 32\\\" class=\\\"marker\\\"><path fill-opacity=\\\"0.25\\\" d=\\\"M16 32s1.427-9.585 3.761-12.025c4.595-4.805 8.685-.99 8.685-.99s4.044 3.964-.526 8.743C25.514 30.245 16 32 16 32z\\\"/><path stroke=\\\"#fff\\\" fill=\\\"#\".concat(randomColor(), \"\\\" d=\\\"M15.938 32S6 17.938 6 11.938C6 .125 15.938 0 15.938 0S26 .125 26 11.875C26 18.062 15.938 32 15.938 32zM16 6a4 4 0 100 8 4 4 0 000-8z\\\"/></svg>\"),\n            iconAnchor: [12, 24],\n            popupAnchor: [9, -26]\n          })\n        }).bindPopup(\"<b>Marker coordinates</b>:<br>\".concat(allPoints[i].toString())).addTo(fg);\n      }\n\n      // zoom to feature group and add padding\n      map.fitBounds(fg.getBounds(), {\n        padding: [20, 20]\n      });\n    }\n\n    //  remove markers from feature group\n    function removeMarkers() {\n      fg.clearLayers();\n    }\n\n    // initialize random marker\n    randomMarker();\n  }, [map]);\n  return null;\n};\n_s(RandomMarkerInMapBounds, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RandomMarkerInMapBounds;\nconst MapWrapper = () => {\n  _s2();\n  const [map, setMap] = useState(null);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    whenCreated: setMap,\n    center: center,\n    zoom: 18,\n    scrollWheelZoom: false,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      ...tileLayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RandomMarkerInMapBounds, {\n      map: map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s2(MapWrapper, \"rxZhgyBNMiWq8Y14QNItnydGNOI=\");\n_c2 = MapWrapper;\nexport default MapWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"RandomMarkerInMapBounds\");\n$RefreshReg$(_c2, \"MapWrapper\");","map":{"version":3,"names":["useState","useEffect","MapContainer","TileLayer","styles","L","tileLayer","jsxDEV","_jsxDEV","center","RandomMarkerInMapBounds","_ref","_s","map","legend","control","position","onAdd","div","DomUtil","create","DomEvent","disableClickPropagation","text","insertAdjacentHTML","addTo","buttonTemplate","customControl","Control","extend","options","title","className","leafletRandomMarker","_map","_initialLayout","container","_container","innerHTML","on","stopPropagation","stop","removeMarkers","randomMarker","addControl","randomColor","Math","floor","random","toString","fg","featureGroup","bounds","getBounds","southWest","getSouthWest","northEast","getNorthEast","lngSpan","lng","latSpan","lat","allPoints","i","points","push","length","marker","icon","divIcon","iconSize","point","html","concat","iconAnchor","popupAnchor","bindPopup","fitBounds","padding","clearLayers","_c","MapWrapper","_s2","setMap","whenCreated","zoom","scrollWheelZoom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/berkanium/Desktop/eys-react-leaflet/src/pages/random-marker-in-map-bounds.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport styles from \"./random-marker-in-map-bounds.module.css\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst center = [52.22977, 21.01178];\n\n// RandomMarkerInMapBounds\nconst RandomMarkerInMapBounds = ({ map }) => {\n  useEffect(() => {\n    if (!map) return;\n\n    const legend = L.control({ position: \"bottomleft\" });\n\n    legend.onAdd = function () {\n      let div = L.DomUtil.create(\"div\", \"description\");\n      L.DomEvent.disableClickPropagation(div);\n      const text = \"Dynamic generation of 30 markers in the map view\";\n      div.insertAdjacentHTML(\"beforeend\", text);\n      return div;\n    };\n\n    legend.addTo(map);\n\n    // add \"random\" button\n    const buttonTemplate =\n      '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path d=\"M24 22h-3.172l-5-5 5-5h3.172v5l7-7-7-7v5h-4c-0.53 0-1.039 0.211-1.414 0.586l-5.586 5.586-5.586-5.586c-0.375-0.375-0.884-0.586-1.414-0.586h-6v4h5.172l5 5-5 5h-5.172v4h6c0.53 0 1.039-0.211 1.414-0.586l5.586-5.586 5.586 5.586c0.375 0.375 0.884 0.586 1.414 0.586h4v5l7-7-7-7v5z\" /></svg>';\n\n    // create custom button\n    const customControl = L.Control.extend({\n      // button position\n      options: {\n        position: \"topleft\",\n        title: \"random marker\",\n        className: styles.leafletRandomMarker,\n      },\n\n      // method\n      onAdd: function (map) {\n        this._map = map;\n        return this._initialLayout();\n      },\n\n      _initialLayout: function () {\n        // create button\n        const container = L.DomUtil.create(\n          \"div\",\n          \"leaflet-bar \" + this.options.className\n        );\n        this._container = container;\n\n        L.DomEvent.disableClickPropagation(container);\n\n        container.title = this.options.title;\n        container.innerHTML = buttonTemplate;\n\n        // action when clik on button\n        // clear and add radnom marker\n        L.DomEvent.on(\n          container,\n          \"mousedown dblclic\",\n          L.DomEvent.stopPropagation\n        )\n          .on(container, \"click\", L.DomEvent.stop)\n          .on(container, \"click\", removeMarkers)\n          .on(container, \"click\", randomMarker);\n\n        return this._container;\n      },\n    });\n\n    // adding new button to map controll\n    map.addControl(new customControl());\n\n    // random color\n    // ------------------------------\n    const randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\n\n    // create legend\n    // ------------------------------\n\n    // add feature group to map\n    const fg = L.featureGroup().addTo(map);\n\n    // create random marker\n    function randomMarker() {\n      // get bounds of map\n      const bounds = map.getBounds();\n\n      let southWest = bounds.getSouthWest();\n      let northEast = bounds.getNorthEast();\n      let lngSpan = northEast.lng - southWest.lng;\n      let latSpan = northEast.lat - southWest.lat;\n\n      let allPoints = [];\n\n      // generate random points and add to array 'allPoints'\n      for (let i = 0; i < 30; i++) {\n        let points = [\n          southWest.lat + latSpan * Math.random(),\n          southWest.lng + lngSpan * Math.random(),\n        ];\n        allPoints.push(points);\n      }\n\n      // add markers to feature group\n      for (let i = 0; i < allPoints.length; i++) {\n        L.marker(allPoints[i], {\n          icon: L.divIcon({\n            className: \"custom-icon-marker\",\n            iconSize: L.point(40, 40),\n            html: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" class=\"marker\"><path fill-opacity=\"0.25\" d=\"M16 32s1.427-9.585 3.761-12.025c4.595-4.805 8.685-.99 8.685-.99s4.044 3.964-.526 8.743C25.514 30.245 16 32 16 32z\"/><path stroke=\"#fff\" fill=\"#${randomColor()}\" d=\"M15.938 32S6 17.938 6 11.938C6 .125 15.938 0 15.938 0S26 .125 26 11.875C26 18.062 15.938 32 15.938 32zM16 6a4 4 0 100 8 4 4 0 000-8z\"/></svg>`,\n            iconAnchor: [12, 24],\n            popupAnchor: [9, -26],\n          }),\n        })\n          .bindPopup(`<b>Marker coordinates</b>:<br>${allPoints[i].toString()}`)\n          .addTo(fg);\n      }\n\n      // zoom to feature group and add padding\n      map.fitBounds(fg.getBounds(), { padding: [20, 20] });\n    }\n\n    //  remove markers from feature group\n    function removeMarkers() {\n      fg.clearLayers();\n    }\n\n    // initialize random marker\n    randomMarker();\n  }, [map]);\n\n  return null;\n};\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n      <TileLayer {...tileLayer} />\n\n      <RandomMarkerInMapBounds map={map} />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}