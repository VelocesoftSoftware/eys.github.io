{"ast":null,"code":"import{useState,useEffect}from'react';import{useMap,MapContainer,TileLayer,GeoJSON}from'react-leaflet';import{circle,intersect}from'@turf/turf';import tileLayer from'../util/tileLayer';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const center=[52.22977,21.01178];const centers=[{lat:52.22990558765487,lng:21.01168513298035},{lat:52.22962958994604,lng:21.011593937873844},{lat:52.2297445891999,lng:21.012012362480167}];const options={steps:64,units:'meters',options:{}};const intersectionColor={color:\"yellow\",weight:2,opacity:1,fillColor:\"yellow\",fillOpacity:0.7};const radius=30;const Intersection=()=>{const map=useMap();const[polygons,setPolygons]=useState([]);useEffect(()=>{centers.map(_ref=>{let{lat,lng}=_ref;const polygon=circle([lng,lat],radius,options);return setPolygons(pol=>[...pol,polygon]);});},[map]);return polygons.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GeoJSON,{data:polygons,color:'red',weight:2}),/*#__PURE__*/_jsx(GeoJSON,{data:intersect(...polygons),style:intersectionColor})]}):null;};const MapWrapper=()=>{return/*#__PURE__*/_jsxs(MapContainer,{center:center,zoom:18,children:[/*#__PURE__*/_jsx(TileLayer,{...tileLayer}),/*#__PURE__*/_jsx(Intersection,{})]});};export default MapWrapper;","map":{"version":3,"names":["useState","useEffect","useMap","MapContainer","TileLayer","GeoJSON","circle","intersect","tileLayer","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","center","centers","lat","lng","options","steps","units","intersectionColor","color","weight","opacity","fillColor","fillOpacity","radius","Intersection","map","polygons","setPolygons","_ref","polygon","pol","length","children","data","style","MapWrapper","zoom"],"sources":["/Users/berkanium/Desktop/eys-react-leaflet/src/pages/part-of-the-common.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useMap, MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { circle, intersect } from '@turf/turf';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst centers = [\n  { lat: 52.22990558765487, lng: 21.01168513298035 },\n  { lat: 52.22962958994604, lng: 21.011593937873844 },\n  { lat: 52.2297445891999, lng: 21.012012362480167 }\n]\n\nconst options = {\n  steps: 64,\n  units: 'meters',\n  options: {}\n}\n\nconst intersectionColor = {\n  color: \"yellow\",\n  weight: 2,\n  opacity: 1,\n  fillColor: \"yellow\",\n  fillOpacity: 0.7\n};\n\nconst radius = 30;\n\nconst Intersection = () => {\n  const map = useMap();\n  const [polygons, setPolygons] = useState([])\n\n  useEffect(() => {\n\n    centers.map(({ lat, lng }) => {\n      const polygon = circle([lng, lat], radius, options);\n\n      return setPolygons(pol => [...pol, polygon]);\n    })\n\n  }, [map])\n\n  return polygons.length > 0\n    ? (\n      <>\n        <GeoJSON data={polygons} color={'red'} weight={2} />\n        <GeoJSON data={intersect(...polygons)} style={intersectionColor} />\n      </>\n    )\n    : null\n}\n\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer center={center} zoom={18}>\n\n      <TileLayer {...tileLayer} />\n\n      <Intersection />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,MAAM,CAAEC,YAAY,CAAEC,SAAS,CAAEC,OAAO,KAAQ,eAAe,CACxE,OAASC,MAAM,CAAEC,SAAS,KAAQ,YAAY,CAC9C,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1C,KAAM,CAAAC,MAAM,CAAG,CAAC,QAAQ,CAAE,QAAQ,CAAC,CAEnC,KAAM,CAAAC,OAAO,CAAG,CACd,CAAEC,GAAG,CAAE,iBAAiB,CAAEC,GAAG,CAAE,iBAAkB,CAAC,CAClD,CAAED,GAAG,CAAE,iBAAiB,CAAEC,GAAG,CAAE,kBAAmB,CAAC,CACnD,CAAED,GAAG,CAAE,gBAAgB,CAAEC,GAAG,CAAE,kBAAmB,CAAC,CACnD,CAED,KAAM,CAAAC,OAAO,CAAG,CACdC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,QAAQ,CACfF,OAAO,CAAE,CAAC,CACZ,CAAC,CAED,KAAM,CAAAG,iBAAiB,CAAG,CACxBC,KAAK,CAAE,QAAQ,CACfC,MAAM,CAAE,CAAC,CACTC,OAAO,CAAE,CAAC,CACVC,SAAS,CAAE,QAAQ,CACnBC,WAAW,CAAE,GACf,CAAC,CAED,KAAM,CAAAC,MAAM,CAAG,EAAE,CAEjB,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,GAAG,CAAG5B,MAAM,CAAC,CAAC,CACpB,KAAM,CAAC6B,QAAQ,CAAEC,WAAW,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CAE5CC,SAAS,CAAC,IAAM,CAEde,OAAO,CAACc,GAAG,CAACG,IAAA,EAAkB,IAAjB,CAAEhB,GAAG,CAAEC,GAAI,CAAC,CAAAe,IAAA,CACvB,KAAM,CAAAC,OAAO,CAAG5B,MAAM,CAAC,CAACY,GAAG,CAAED,GAAG,CAAC,CAAEW,MAAM,CAAET,OAAO,CAAC,CAEnD,MAAO,CAAAa,WAAW,CAACG,GAAG,EAAI,CAAC,GAAGA,GAAG,CAAED,OAAO,CAAC,CAAC,CAC9C,CAAC,CAAC,CAEJ,CAAC,CAAE,CAACJ,GAAG,CAAC,CAAC,CAET,MAAO,CAAAC,QAAQ,CAACK,MAAM,CAAG,CAAC,cAEtBtB,KAAA,CAAAF,SAAA,EAAAyB,QAAA,eACE3B,IAAA,CAACL,OAAO,EAACiC,IAAI,CAAEP,QAAS,CAACR,KAAK,CAAE,KAAM,CAACC,MAAM,CAAE,CAAE,CAAE,CAAC,cACpDd,IAAA,CAACL,OAAO,EAACiC,IAAI,CAAE/B,SAAS,CAAC,GAAGwB,QAAQ,CAAE,CAACQ,KAAK,CAAEjB,iBAAkB,CAAE,CAAC,EACnE,CAAC,CAEH,IAAI,CACV,CAAC,CAGD,KAAM,CAAAkB,UAAU,CAAGA,CAAA,GAAM,CACvB,mBACE1B,KAAA,CAACX,YAAY,EAACY,MAAM,CAAEA,MAAO,CAAC0B,IAAI,CAAE,EAAG,CAAAJ,QAAA,eAErC3B,IAAA,CAACN,SAAS,KAAKI,SAAS,CAAG,CAAC,cAE5BE,IAAA,CAACmB,YAAY,GAAE,CAAC,EAEJ,CAAC,CAEnB,CAAC,CAED,cAAe,CAAAW,UAAU"},"metadata":{},"sourceType":"module"}