{"version":3,"sources":["../node_modules/react-leaflet/esm/FeatureGroup.js","pages/matching-all-markers-to-the-map-view.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js","../node_modules/react-leaflet/esm/hooks.js"],"names":["FeatureGroup","createPathComponent","_ref","ctx","children","_c","options","instance","LeafletFeatureGroup","context","layerContainer","overlayContainer","center","points","lat","lng","title","ControllingGroup","map","useMapEvent","layeradd","bounds","L","LatLngBounds","eachLayer","layer","extend","getBounds","isValid","fitBounds","MapWrapper","_jsxs","MapContainer","className","zoom","scrollWheelZoom","_jsx","TileLayer","tileLayer","index","Marker","position","Popup","withPane","props","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","on","current","off","useLayerLifecycle","_context$layerContain2","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","useState","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","prevProps","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer","LeafletPopup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup","LeafletMarker","marker","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable","useMap","type","handler"],"mappings":"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","file":"static/js/pages-matching-all-markers-to-the-map-view-js.d5a7c050.chunk.js","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { FeatureGroup as LeafletFeatureGroup } from 'leaflet';\nexport const FeatureGroup = createPathComponent(function createFeatureGroup(_ref, ctx) {\n  let {\n    children: _c,\n    ...options\n  } = _ref;\n  const instance = new LeafletFeatureGroup([], options);\n  const context = { ...ctx,\n    layerContainer: instance,\n    overlayContainer: instance\n  };\n  return {\n    instance,\n    context\n  };\n});","import { MapContainer, useMapEvent, FeatureGroup, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst points = [\n  {\n    lat: 52.230020586193795,\n    lng: 21.01083755493164,\n    title: 'point 1'\n  },\n  {\n    lat: 52.22924516170657,\n    lng: 21.011320352554325,\n    title: 'point 2'\n  },\n  {\n    lat: 52.229511304688444,\n    lng: 21.01270973682404,\n    title: 'point 3'\n  },\n  {\n    lat: 52.23040500771883,\n    lng: 21.012146472930908,\n    title: 'point 4'\n  },\n];\n\nconst ControllingGroup = () => {\n  const map = useMapEvent({\n    layeradd() {\n      let bounds = new L.LatLngBounds();\n      map.eachLayer(function (layer) {\n        if (layer instanceof L.FeatureGroup) {\n          bounds.extend(layer.getBounds());\n        }\n      });\n\n      if (bounds.isValid()) {\n        map.fitBounds(bounds);\n      }\n    }\n  })\n\n  return null\n}\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer className=\"markercluster-map\" center={center} zoom={20} scrollWheelZoom={false}>\n\n      <TileLayer {...tileLayer} />\n\n      <FeatureGroup>\n        {points.map(({ lat, lng, title }, index) => (\n          <Marker key={index} position={[lat, lng]}>\n            <Popup>{title}</Popup>\n          </Marker>\n        ))}\n      </FeatureGroup>\n\n      <ControllingGroup />\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  let {\n    position,\n    ...options\n  } = _ref;\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}"],"sourceRoot":""}