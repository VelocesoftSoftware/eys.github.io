{"version":3,"sources":["pages/multiple-tile-layers.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/LayersControl.js"],"names":["center","layers","name","attribution","url","MapWrapper","_jsx","MapContainer","zoom","scrollWheelZoom","children","LayersControl","position","map","layer","index","BaseLayer","checked","TileLayer","withPane","props","context","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","instance","on","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","useState","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","options","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","prevProps","opacity","zIndex","setOpacity","setZIndex","_ref","LeafletTileLayer","useLayersControlElement","ctx","_c","Control","Layers","undefined","layersControl","control","collapsed","collapse","expand","useLayersControl","createControlledLayer","addLayerToControl","parentContext","setLayer","useCallback","layerToAdd","layerToRemove","useMemo","addBaseLayer","Overlay","addOverlay"],"mappings":"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","file":"static/js/pages-multiple-tile-layers-js.8cfbbc87.chunk.js","sourcesContent":["import { MapContainer, TileLayer, LayersControl } from 'react-leaflet';\n\nconst center = [52.22977, 21.01178];\n\nconst layers = [\n  {\n    name: \"Osm Mapnik\",\n    attribution: '&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a>OpenStreetMap</a> contributors',\n    url: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n  },\n  {\n    name: \"CartoDB\",\n    attribution: '&copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a> contributors',\n    url: 'https://{s}.basemaps.cartocdn.com/rastertiles/dark_all/{z}/{x}/{y}.png'\n  }\n]\n\nconst MapWrapper = () => {\n\n\n  return (\n    <MapContainer center={center} zoom={13} scrollWheelZoom={false}>\n\n      <LayersControl position=\"topright\">\n\n        {layers.map((layer, index) => {\n          return (\n            <LayersControl.BaseLayer\n              key={index}\n              checked={index === 0 ? true : false}\n              name={layer.name}\n            >\n              <TileLayer\n                attribution={layer.attribution}\n                url={layer.url}\n              />\n            </LayersControl.BaseLayer>\n          )\n        })}\n\n      </LayersControl>\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl(_ref, ctx) {\n  let {\n    children: _c,\n    ...options\n  } = _ref;\n  const instance = new Control.Layers(undefined, undefined, options);\n  return {\n    instance,\n    context: { ...ctx,\n      layersControl: instance\n    }\n  };\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement);\n// @ts-ignore\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    const parentContext = useLeafletContext();\n    const propsRef = useRef(props);\n    const [layer, setLayer] = useState(null);\n    const {\n      layersControl,\n      map\n    } = parentContext;\n    const addLayer = useCallback(layerToAdd => {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    const removeLayer = useCallback(layerToRemove => {\n      layersControl == null ? void 0 : layersControl.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    const context = useMemo(() => ({ ...parentContext,\n      layerContainer: {\n        addLayer,\n        removeLayer\n      }\n    }), [parentContext, addLayer, removeLayer]);\n    useEffect(() => {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});"],"sourceRoot":""}