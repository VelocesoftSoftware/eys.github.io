{"version":3,"sources":["pages/custom-button.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["center","CustomButton","_ref","map","useEffect","customControler","L","Control","extend","options","position","onAdd","btn","DomUtil","create","title","textContent","className","onmouseover","this","style","transform","onmouseout","onclick","document","body","classList","add","setTimeout","remove","addControl","MapWrapper","setMap","useState","_jsxs","MapContainer","whenCreated","zoom","scrollWheelZoom","children","_jsx","TileLayer","tileLayer","withPane","props","context","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","instance","on","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-custom-button-js.10ca9834.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"./custom-button.css\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst center = [52.22977, 21.01178];\n\nconst CustomButton = ({ map }) => {\n  useEffect(() => {\n    if (!map) return;\n\n    const customControler = L.Control.extend({\n      options: {\n        position: \"topright\",\n      },\n\n      onAdd: function () {\n        const btn = L.DomUtil.create(\"button\");\n        btn.title = \"pooooooooooooop rotation\";\n        btn.textContent = \"ðŸ’©\";\n        btn.className = \"customButton\";\n\n        btn.onmouseover = function () {\n          this.style.transform = \"scale(1.3)\";\n        };\n\n        btn.onmouseout = function () {\n          this.style.transform = \"scale(1)\";\n        };\n\n        btn.onclick = function () {\n          document.body.classList.add(\"rotate\");\n\n          setTimeout(() => {\n            document.body.classList.remove(\"rotate\");\n          }, 4000);\n        };\n\n        return btn;\n      },\n    });\n\n    map.addControl(new customControler());\n  }, [map]);\n\n  return null;\n};\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n      <TileLayer {...tileLayer} />\n\n      <CustomButton map={map} />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}