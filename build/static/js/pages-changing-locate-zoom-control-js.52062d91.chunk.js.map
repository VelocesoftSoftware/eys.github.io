{"version":3,"sources":["../node_modules/react-leaflet/esm/ZoomControl.js","pages/changing-locate-zoom-control.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["ZoomControl","createControlComponent","props","Control","Zoom","center","MapWrapper","_jsxs","MapContainer","zoomControl","zoom","scrollWheelZoom","children","_jsx","position","TileLayer","tileLayer","withPane","context","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","instance","on","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","map","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","useState","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","options","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","_ref","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-changing-locate-zoom-control-js.52062d91.chunk.js","sourcesContent":["import { createControlComponent } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nexport const ZoomControl = createControlComponent(function createZoomControl(props) {\n  return new Control.Zoom(props);\n});","import { MapContainer, TileLayer, ZoomControl } from 'react-leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer zoomControl={false} center={center} zoom={18} scrollWheelZoom={false}>\n\n      <ZoomControl position={'topright'} />\n\n      <TileLayer {...tileLayer} />\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}