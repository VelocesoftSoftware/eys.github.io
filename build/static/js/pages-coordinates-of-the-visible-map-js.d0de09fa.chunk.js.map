{"version":3,"sources":["../node_modules/react-leaflet/esm/Rectangle.js","pages/coordinates-of-the-visible-map.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["Rectangle","createPathComponent","_ref","ctx","bounds","options","instance","LeafletRectangle","context","overlayContainer","layer","props","prevProps","setBounds","center","SetRentacle","map","bound","index","_jsx","color","concat","Math","floor","random","toString","weight","fillOpacity","contentText","getBounds","_northEast","_southWest","Location","_ref2","useState","useEffect","info","L","DomUtil","create","positon","Control","extend","position","onAdd","innerHTML","addControl","on","textContent","b","length","MapWrapper","setMap","_jsxs","MapContainer","whenCreated","zoom","scrollWheelZoom","children","TileLayer","tileLayer","withPane","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-coordinates-of-the-visible-map-js.d0de09fa.chunk.js","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { Rectangle as LeafletRectangle } from 'leaflet';\nexport const Rectangle = createPathComponent(function createRectangle(_ref, ctx) {\n  let {\n    bounds,\n    ...options\n  } = _ref;\n  const instance = new LeafletRectangle(bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateRectangle(layer, props, prevProps) {\n  if (props.bounds !== prevProps.bounds) {\n    layer.setBounds(props.bounds);\n  }\n});","import { useEffect, useState } from 'react';\nimport { MapContainer, Rectangle, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nfunction getRandomColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`.toString();\n}\n\nconst SetRentacle = ({ bounds }) => {\n  return bounds.map((bound, index) => (\n    <Rectangle\n      key={index}\n      bounds={bound}\n      color={getRandomColor()}\n      weight={10}\n      fillOpacity={0.1} />\n  ));\n}\n\nfunction contentText(getBounds) {\n  const { _northEast, _southWest } = getBounds;\n  return `SouthWest: ${_southWest}, NorthEast: ${_northEast}`;\n}\n\nconst Location = ({ map }) => {\n  const [bounds, setBounds] = useState([])\n\n  useEffect(() => {\n    if (!map) return;\n\n    const info = L.DomUtil.create('div', 'legend');\n\n    const positon = L.Control.extend({\n      options: {\n        position: 'bottomleft'\n      },\n\n      onAdd: function () {\n        info.innerHTML = contentText(map.getBounds());\n        return info;\n      }\n    })\n\n    map.addControl(new positon());\n\n    map.on('moveend zoomend', () => {\n      const bounds = map.getBounds();\n      info.textContent = contentText(bounds);\n      setBounds(b => [...b, bounds])\n    });\n\n  }, [map])\n\n  return bounds?.length <= 0\n    ? <SetRentacle bounds={bounds} />\n    : null;\n}\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null)\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <Location map={map} />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}