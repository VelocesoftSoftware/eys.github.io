{"version":3,"sources":["pages/tileLayer.js","../node_modules/react-leaflet/esm/hooks.js"],"names":["MyTileLayer","map","useMap","useEffect","NewTileLayer","L","TileLayer","extend","getTileUrl","random","Math","ceil","concat","getAttribution","addControl","MapWrapper","_jsx","MapContainer","crs","CRS","Simple","center","zoom","scrollWheelZoom","children","useLeafletContext","useMapEvent","type","handler","on","off"],"mappings":"wIAAA,2DAIA,MAAMA,EAAcA,KAClB,MAAMC,EAAMC,cAmBZ,OAjBAC,qBAAU,KACR,IAAKF,EAAK,OAEV,MAAMG,EAAeC,IAAEC,UAAUC,OAAO,CACtCC,WAAYA,KACV,MAAMC,EAASC,KAAKC,KAAqB,GAAhBD,KAAKD,UAC9B,MAAM,wCAANG,OAA+CH,EAAM,EAEvDI,eAAgBA,IACP,oGAIXZ,EAAIa,WAAW,IAAIV,EAAe,GAEjC,CAACH,IAEG,IAAI,EAiBEc,UAdIA,IAEfC,cAACC,IAAY,CACXC,IAAKb,IAAEc,IAAIC,OACXC,OAAQ,CAAC,EAAG,GACZC,KAAM,EACNC,iBAAiB,EAAMC,SAGvBR,cAAChB,EAAW,K,kCCpClB,uFAEO,SAASE,IACd,OAAOuB,cAAoBxB,GAC7B,CACO,SAASyB,EAAYC,EAAMC,GAChC,MAAM3B,EAAMC,IASZ,OARAC,qBAAU,WAGR,OADAF,EAAI4B,GAAGF,EAAMC,GACN,WAEL3B,EAAI6B,IAAIH,EAAMC,EAChB,CACF,GAAG,CAAC3B,EAAK0B,EAAMC,IACR3B,CACT,C","file":"static/js/pages-tileLayer-js.7a281e4b.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { MapContainer, useMap } from 'react-leaflet';\nimport L from 'leaflet';\n\nconst MyTileLayer = () => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (!map) return;\n\n    const NewTileLayer = L.TileLayer.extend({\n      getTileUrl: () => {\n        const random = Math.ceil(Math.random() * 40);\n        return `https://loremflickr.com/250/250?lock=${random}`;\n      },\n      getAttribution: () => {\n        return \"<a target='_blank' href='https://babakfakhamzadeh.com/project/loremflickr-com/'>loremflickr</a>\";\n      },\n    })\n\n    map.addControl(new NewTileLayer());\n\n  }, [map]);\n\n  return null;\n}\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer\n      crs={L.CRS.Simple}\n      center={[0, 0]}\n      zoom={5}\n      scrollWheelZoom={false}\n    >\n\n      <MyTileLayer />\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}"],"sourceRoot":""}