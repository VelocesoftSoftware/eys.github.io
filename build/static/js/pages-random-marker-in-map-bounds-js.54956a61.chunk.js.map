{"version":3,"sources":["pages/random-marker-in-map-bounds.module.css","pages/random-marker-in-map-bounds.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["module","exports","center","RandomMarkerInMapBounds","_ref","map","useEffect","legend","L","control","position","onAdd","div","DomUtil","create","DomEvent","disableClickPropagation","insertAdjacentHTML","addTo","customControl","Control","extend","options","title","className","styles","leafletRandomMarker","this","_map","_initialLayout","container","_container","innerHTML","on","stopPropagation","stop","removeMarkers","randomMarker","addControl","randomColor","Math","floor","random","toString","fg","featureGroup","bounds","getBounds","southWest","getSouthWest","northEast","getNorthEast","lngSpan","lng","latSpan","lat","allPoints","i","points","push","length","marker","icon","divIcon","iconSize","point","html","concat","iconAnchor","popupAnchor","bindPopup","fitBounds","padding","clearLayers","MapWrapper","setMap","useState","_jsxs","MapContainer","whenCreated","zoom","scrollWheelZoom","children","_jsx","TileLayer","tileLayer","withPane","props","context","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","instance","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-random-marker-in-map-bounds-js.54956a61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"leafletRandomMarker\":\"random-marker-in-map-bounds_leafletRandomMarker__1wuSk\"};","import { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport styles from \"./random-marker-in-map-bounds.module.css\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst center = [52.22977, 21.01178];\n\n// RandomMarkerInMapBounds\nconst RandomMarkerInMapBounds = ({ map }) => {\n  useEffect(() => {\n    if (!map) return;\n\n    const legend = L.control({ position: \"bottomleft\" });\n\n    legend.onAdd = function () {\n      let div = L.DomUtil.create(\"div\", \"description\");\n      L.DomEvent.disableClickPropagation(div);\n      const text = \"Dynamic generation of 30 markers in the map view\";\n      div.insertAdjacentHTML(\"beforeend\", text);\n      return div;\n    };\n\n    legend.addTo(map);\n\n    // add \"random\" button\n    const buttonTemplate =\n      '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path d=\"M24 22h-3.172l-5-5 5-5h3.172v5l7-7-7-7v5h-4c-0.53 0-1.039 0.211-1.414 0.586l-5.586 5.586-5.586-5.586c-0.375-0.375-0.884-0.586-1.414-0.586h-6v4h5.172l5 5-5 5h-5.172v4h6c0.53 0 1.039-0.211 1.414-0.586l5.586-5.586 5.586 5.586c0.375 0.375 0.884 0.586 1.414 0.586h4v5l7-7-7-7v5z\" /></svg>';\n\n    // create custom button\n    const customControl = L.Control.extend({\n      // button position\n      options: {\n        position: \"topleft\",\n        title: \"random marker\",\n        className: styles.leafletRandomMarker,\n      },\n\n      // method\n      onAdd: function (map) {\n        this._map = map;\n        return this._initialLayout();\n      },\n\n      _initialLayout: function () {\n        // create button\n        const container = L.DomUtil.create(\n          \"div\",\n          \"leaflet-bar \" + this.options.className\n        );\n        this._container = container;\n\n        L.DomEvent.disableClickPropagation(container);\n\n        container.title = this.options.title;\n        container.innerHTML = buttonTemplate;\n\n        // action when clik on button\n        // clear and add radnom marker\n        L.DomEvent.on(\n          container,\n          \"mousedown dblclic\",\n          L.DomEvent.stopPropagation\n        )\n          .on(container, \"click\", L.DomEvent.stop)\n          .on(container, \"click\", removeMarkers)\n          .on(container, \"click\", randomMarker);\n\n        return this._container;\n      },\n    });\n\n    // adding new button to map controll\n    map.addControl(new customControl());\n\n    // random color\n    // ------------------------------\n    const randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\n\n    // create legend\n    // ------------------------------\n\n    // add feature group to map\n    const fg = L.featureGroup().addTo(map);\n\n    // create random marker\n    function randomMarker() {\n      // get bounds of map\n      const bounds = map.getBounds();\n\n      let southWest = bounds.getSouthWest();\n      let northEast = bounds.getNorthEast();\n      let lngSpan = northEast.lng - southWest.lng;\n      let latSpan = northEast.lat - southWest.lat;\n\n      let allPoints = [];\n\n      // generate random points and add to array 'allPoints'\n      for (let i = 0; i < 30; i++) {\n        let points = [\n          southWest.lat + latSpan * Math.random(),\n          southWest.lng + lngSpan * Math.random(),\n        ];\n        allPoints.push(points);\n      }\n\n      // add markers to feature group\n      for (let i = 0; i < allPoints.length; i++) {\n        L.marker(allPoints[i], {\n          icon: L.divIcon({\n            className: \"custom-icon-marker\",\n            iconSize: L.point(40, 40),\n            html: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" class=\"marker\"><path fill-opacity=\"0.25\" d=\"M16 32s1.427-9.585 3.761-12.025c4.595-4.805 8.685-.99 8.685-.99s4.044 3.964-.526 8.743C25.514 30.245 16 32 16 32z\"/><path stroke=\"#fff\" fill=\"#${randomColor()}\" d=\"M15.938 32S6 17.938 6 11.938C6 .125 15.938 0 15.938 0S26 .125 26 11.875C26 18.062 15.938 32 15.938 32zM16 6a4 4 0 100 8 4 4 0 000-8z\"/></svg>`,\n            iconAnchor: [12, 24],\n            popupAnchor: [9, -26],\n          }),\n        })\n          .bindPopup(`<b>Marker coordinates</b>:<br>${allPoints[i].toString()}`)\n          .addTo(fg);\n      }\n\n      // zoom to feature group and add padding\n      map.fitBounds(fg.getBounds(), { padding: [20, 20] });\n    }\n\n    //  remove markers from feature group\n    function removeMarkers() {\n      fg.clearLayers();\n    }\n\n    // initialize random marker\n    randomMarker();\n  }, [map]);\n\n  return null;\n};\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n      <TileLayer {...tileLayer} />\n\n      <RandomMarkerInMapBounds map={map} />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}