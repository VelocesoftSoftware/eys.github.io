{"version":3,"sources":["pages/dragable-markers.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js"],"names":["center","points","lat","lng","title","MapWrapper","map","setMap","useState","text","setText","useEffect","legend","L","control","position","onAdd","div","DomUtil","create","innerHTML","addTo","eventHandlers","useMemo","dragend","e","target","getLatLng","_jsxs","MapContainer","whenCreated","zoom","scrollWheelZoom","children","_jsx","TileLayer","tileLayer","_ref","index","Marker","draggable","autoPan","Popup","withPane","props","context","_props$pane","pane","useEventHandlers","element","eventHandlersRef","useRef","instance","on","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","options","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer","LeafletPopup","overlayContainer","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup","ctx","LeafletMarker","marker","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","enable","disable"],"mappings":"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","file":"static/js/pages-dragable-markers-js.a6d2ab2d.chunk.js","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst points = [\n  {\n    lat: 52.230020586193795,\n    lng: 21.01083755493164,\n    title: 'point 1'\n  },\n  {\n    lat: 52.22924516170657,\n    lng: 21.011320352554325,\n    title: 'point 2'\n  },\n  {\n    lat: 52.229511304688444,\n    lng: 21.01270973682404,\n    title: 'point 3'\n  },\n  {\n    lat: 52.23040500771883,\n    lng: 21.012146472930908,\n    title: 'point 4'\n  },\n];\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n  const [text, setText] = useState(null)\n\n  useEffect(() => {\n    if (!map) return;\n\n    const legend = L.control({ position: \"bottomleft\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      div.innerHTML = `click marker, move`;\n      setText(div);\n      return div;\n    };\n\n    legend.addTo(map);\n\n  }, [map]);\n\n  const eventHandlers = useMemo(() => ({\n    dragend(e) {\n      text.innerHTML = e.target.getLatLng();\n    },\n  }), [text])\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      {points.map(({ lat, lng, title }, index) => (\n        <Marker\n          eventHandlers={eventHandlers}\n          key={index}\n          draggable={true}\n          autoPan={true}\n          position={[lat, lng]}\n        >\n          <Popup>{title}</Popup>\n        </Marker>\n      ))}\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  let {\n    position,\n    ...options\n  } = _ref;\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"],"sourceRoot":""}