{"version":3,"sources":["pages/marker-grouping-markercluster-plugin.js","util/tileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js"],"names":["center","points","lat","lng","title","MapWrapper","_jsxs","MapContainer","className","zoom","scrollWheelZoom","children","_jsx","TileLayer","tileLayer","MarkerClusterGroup","map","_ref","index","Marker","position","Popup","attribution","url","createOverlayComponent","props","context","instance","LeafletPopup","overlayContainer","element","setOpen","onClose","onOpen","useEffect","onPopupOpen","event","popup","update","onPopupClose","on","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","off","unbindPopup","removeLayer","createLayerComponent","ctx","options","LeafletMarker","marker","prevProps","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable"],"mappings":"wIAAA,sFAMA,MAAMA,EAAS,CAAC,SAAU,UAEpBC,EAAS,CACb,CACEC,IAAK,mBACLC,IAAK,kBACLC,MAAO,WAET,CACEF,IAAK,kBACLC,IAAK,mBACLC,MAAO,WAET,CACEF,IAAK,mBACLC,IAAK,kBACLC,MAAO,WAET,CACEF,IAAK,kBACLC,IAAK,mBACLC,MAAO,YA2BIC,UAvBIA,IAEfC,eAACC,IAAY,CACXC,UAAU,oBACVR,OAAQA,EACRS,KAAM,GACNC,iBAAiB,EAAMC,SAAA,CAGvBC,cAACC,IAAS,IAAKC,MAEfF,cAACG,IAAkB,CAAAJ,SAChBV,EAAOe,KAAI,CAAAC,EAAsBC,KAAK,IAA1B,IAAEhB,EAAG,IAAEC,EAAG,MAAEC,GAAOa,EAAA,OAC9BL,cAACO,IAAM,CAAaC,SAAU,CAAClB,EAAKC,GAAKQ,SACvCC,cAACS,IAAK,CAAAV,SAAEP,KADGc,EAEJ,Q,kCCzCJJ,IALG,CAChBQ,YAAa,2EACbC,IAAK,qD,kCCFP,6DAGO,MAAMF,EAAQG,aAAuB,SAAqBC,EAAOC,GACtE,MAAO,CACLC,SAAU,IAAIC,QAAaH,EAAOC,EAAQG,kBAC1CH,UAEJ,IAAG,SAA2BI,EAASJ,EAASD,EAAOM,GACrD,MAAM,QACJC,EAAO,OACPC,EAAM,SACNb,GACEK,EACJS,qBAAU,WACR,MAAM,SACJP,GACEG,EAEJ,SAASK,EAAYC,GACfA,EAAMC,QAAUV,IAClBA,EAASW,SACTP,GAAQ,GACE,MAAVE,GAA0BA,IAE9B,CAEA,SAASM,EAAaH,GAChBA,EAAMC,QAAUV,IAClBI,GAAQ,GACG,MAAXC,GAA2BA,IAE/B,CAmBA,OAjBAN,EAAQV,IAAIwB,GAAG,CACbC,UAAWN,EACXO,WAAYH,IAGkB,MAA5Bb,EAAQG,kBAEM,MAAZT,GACFO,EAASgB,UAAUvB,GAGrBO,EAASiB,OAAOlB,EAAQV,MAGxBU,EAAQG,iBAAiBgB,UAAUlB,GAG9B,WACL,IAAImB,EAEJpB,EAAQV,IAAI+B,IAAI,CACdN,UAAWN,EACXO,WAAYH,IAEwC,OAArDO,EAAwBpB,EAAQG,mBAAqCiB,EAAsBE,cAC5FtB,EAAQV,IAAIiC,YAAYtB,EAC1B,CACF,GAAG,CAACG,EAASJ,EAASK,EAASC,EAASC,EAAQb,GAClD,G,kCC9DA,sDAEO,MAAMD,EAAS+B,aAAqB,SAAsBjC,EAAMkC,GACrE,IAAI,SACF/B,KACGgC,GACDnC,EACJ,MAAMU,EAAW,IAAI0B,SAAcjC,EAAUgC,GAC7C,MAAO,CACLzB,WACAD,QAAS,IAAKyB,EACZtB,iBAAkBF,GAGxB,IAAG,SAAsB2B,EAAQ7B,EAAO8B,GAClC9B,EAAML,WAAamC,EAAUnC,UAC/BkC,EAAOX,UAAUlB,EAAML,UAGP,MAAdK,EAAM+B,MAAgB/B,EAAM+B,OAASD,EAAUC,MACjDF,EAAOG,QAAQhC,EAAM+B,MAGG,MAAtB/B,EAAMiC,cAAwBjC,EAAMiC,eAAiBH,EAAUG,cACjEJ,EAAOK,gBAAgBlC,EAAMiC,cAGV,MAAjBjC,EAAMmC,SAAmBnC,EAAMmC,UAAYL,EAAUK,SACvDN,EAAOO,WAAWpC,EAAMmC,SAGH,MAAnBN,EAAOQ,UAAoBrC,EAAMsC,YAAcR,EAAUQ,aACnC,IAApBtC,EAAMsC,UACRT,EAAOQ,SAASE,SAEhBV,EAAOQ,SAASG,UAGtB,G","file":"static/js/pages-marker-grouping-markercluster-plugin-js.79ff37a7.chunk.js","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\n\nimport 'react-leaflet-markercluster/dist/styles.min.css';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst points = [\n  {\n    lat: 52.230020586193795,\n    lng: 21.01083755493164,\n    title: 'point 1'\n  },\n  {\n    lat: 52.22924516170657,\n    lng: 21.011320352554325,\n    title: 'point 2'\n  },\n  {\n    lat: 52.229511304688444,\n    lng: 21.01270973682404,\n    title: 'point 3'\n  },\n  {\n    lat: 52.23040500771883,\n    lng: 21.012146472930908,\n    title: 'point 4'\n  },\n];\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer\n      className=\"markercluster-map\"\n      center={center}\n      zoom={15}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <MarkerClusterGroup>\n        {points.map(({ lat, lng, title }, index) => (\n          <Marker key={index} position={[lat, lng]}>\n            <Popup>{title}</Popup>\n          </Marker>\n        ))}\n      </MarkerClusterGroup>\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  let {\n    position,\n    ...options\n  } = _ref;\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"],"sourceRoot":""}