{"version":3,"sources":["../node_modules/react-leaflet/esm/Circle.js","pages/location.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js","../node_modules/react-leaflet/esm/hooks.js","../node_modules/@react-leaflet/core/esm/circle.js"],"names":["Circle","createPathComponent","_ref","ctx","center","children","_c","options","instance","LeafletCircle","context","overlayContainer","updateCircle","Location","map","useMap","position","setPosition","useState","useEffect","locate","setView","on","event","latlng","_jsxs","_Fragment","_jsx","weight","color","fillColor","fillOpacity","radius","Marker","Popup","MapWrapper","MapContainer","zoom","scrollWheelZoom","TileLayer","tileLayer","withPane","props","_props$pane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","current","off","useLayerLifecycle","_context$layerContain2","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","_props$pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer","LeafletPopup","onClose","onOpen","onPopupOpen","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup","LeafletMarker","marker","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable","useMapEvent","type","handler","setRadius"],"mappings":"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","file":"static/js/pages-location-js.1577b5d3.chunk.js","sourcesContent":["import { createPathComponent, updateCircle } from '@react-leaflet/core';\nimport { Circle as LeafletCircle } from 'leaflet';\nexport const Circle = createPathComponent(function createCircle(_ref, ctx) {\n  let {\n    center,\n    children: _c,\n    ...options\n  } = _ref;\n  const instance = new LeafletCircle(center, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, updateCircle);","import { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, useMap, Marker, Popup, Circle } from 'react-leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst Location = () => {\n  const map = useMap();\n  const [position, setPosition] = useState(null)\n\n  useEffect(() => {\n    map.locate({\n      setView: true\n    })\n    map.on('locationfound', (event) => {\n      setPosition(event.latlng)\n    })\n  }, [map])\n\n\n  return position\n    ? (\n      <>\n        <Circle center={position} weight={2} color={'red'} fillColor={'red'} fillOpacity={0.1} radius={500}></Circle>\n        <Marker position={position}>\n          <Popup>You are here</Popup>\n        </Marker>\n      </>\n    )\n    : null\n}\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <Location />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  let {\n    position,\n    ...options\n  } = _ref;\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","export function updateCircle(layer, props, prevProps) {\n  if (props.center !== prevProps.center) {\n    layer.setLatLng(props.center);\n  }\n\n  if (props.radius != null && props.radius !== prevProps.radius) {\n    layer.setRadius(props.radius);\n  }\n}"],"sourceRoot":""}